From 100761eaa605a20a3b7793a7fe1657c62c743436 Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelman@morgridge.org>
Date: Wed, 15 Jan 2025 08:17:53 -0600
Subject: [PATCH 08/13] [XrdHttp] Set oss.asize if object size is known

---
 src/XrdHttp/XrdHttpReq.cc | 28 +++++++++++++++++++++++-----
 src/XrdHttp/XrdHttpReq.hh |  4 +++-
 2 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/src/XrdHttp/XrdHttpReq.cc b/src/XrdHttp/XrdHttpReq.cc
index aaa90899e..22a835b1d 100644
--- a/src/XrdHttp/XrdHttpReq.cc
+++ b/src/XrdHttp/XrdHttpReq.cc
@@ -929,14 +929,31 @@ int XrdHttpReq::ProcessHTTPReq() {
 
   kXR_int32 l;
 
+  int has_query_params = 0;
+  if (!m_appended_asize) {
+    m_appended_asize = true;
+    if (request == rtPUT && length) {
+      if (has_query_params == 0) {
+        has_query_params = strchr(resourceplusopaque.c_str(), '?') ? 1 : 2;
+      }
+      resourceplusopaque.append((has_query_params == 1) ? '&' : '?');
+      has_query_params = 1;
+      auto length_str = std::to_string(length);
+      resourceplusopaque.append("oss.asize=");
+      resourceplusopaque.append(length_str.c_str());
+      if (!opaque) {
+        opaque = new XrdOucEnv();
+      }
+      opaque->Put("oss.asize", length_str.c_str());
+    }
+  }
+
   /// If we have to add extra header information, add it here.
   if (!m_appended_hdr2cgistr && !hdr2cgistr.empty()) {
-    const char *p = strchr(resourceplusopaque.c_str(), '?');
-    if (p) {
-      resourceplusopaque.append("&");
-    } else {
-      resourceplusopaque.append("?");
+    if (has_query_params == 0) {
+      has_query_params = strchr(resourceplusopaque.c_str(), '?') ? 1 : 2;
     }
+    resourceplusopaque.append((has_query_params == 1) ? '&' : '?');
 
     char *q = quote(hdr2cgistr.c_str());
     resourceplusopaque.append(q);
@@ -2799,6 +2816,7 @@ void XrdHttpReq::reset() {
   destination = "";
   hdr2cgistr = "";
   m_appended_hdr2cgistr = false;
+  m_appended_asize = false;
 
   iovP = 0;
   iovN = 0;
diff --git a/src/XrdHttp/XrdHttpReq.hh b/src/XrdHttp/XrdHttpReq.hh
index 1eee5cb45..fd58ae561 100644
--- a/src/XrdHttp/XrdHttpReq.hh
+++ b/src/XrdHttp/XrdHttpReq.hh
@@ -281,7 +281,9 @@ class XrdHttpReq : public XrdXrootd::Bridge::Result {
   /// Additional opaque info that may come from the hdr2cgi directive
   std::string hdr2cgistr;
   bool m_appended_hdr2cgistr;
-  
+  /// Track whether we already appended the oss.asize argument for PUTs.
+  bool m_appended_asize{false};
+
   //
   // Area for coordinating request and responses to/from the bridge
   //
-- 
2.43.5

