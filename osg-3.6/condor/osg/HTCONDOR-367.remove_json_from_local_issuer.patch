commit c0b0d60695a63231b2752251ee23426e74844052
Author: Tim Theisen <tim@cs.wisc.edu>
Date:   Fri Apr 16 17:38:22 2021 -0500

    HTCONDOR-367
    
    Squashed commit of the following:
    
    commit cd004541c2c71c3d38f594afc02ef0f3833c0c59
    Author: Derek Weitzel <dweitzel@cse.unl.edu>
    Date:   Fri Apr 16 08:52:02 2021 -0500
    
        Update src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py
    
        Co-authored-by: jasoncpatton <jason.c.patton@gmail.com>
    
    commit b96c865ec08fd0ab4c2d4dad888dc378af01c13b
    Author: Jason Patton <jpatton@cs.wisc.edu>
    Date:   Mon Apr 5 23:10:58 2021 -0500
    
        Add option to local issuer credmon to write access tokens as JSON or not (HTCONDOR-367)
    
        Write out access tokens as JSON if
        LOCAL_CREDMON_TOKEN_USE_JSON = true
    
        Write out access tokens as bare strings if
        LOCAL_CREDMON_TOKEN_USE_JSON = false
    
    commit da9c0985ec88bde98d7a470eee01ee68f2a60635
    Author: Derek Weitzel <dweitzel@cse.unl.edu>
    Date:   Fri Mar 26 09:15:34 2021 -0500
    
        Update src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py
    
        Co-authored-by: jasoncpatton <jason.c.patton@gmail.com>
    
    commit 48cb46dda6018086c8ec6a98460fd1e7d6b89edf
    Author: Derek Weitzel <djw8605@gmail.com>
    Date:   Fri Mar 26 08:30:26 2021 -0500
    
        Remove the JSON from the local issued token
    
        JSON in the token file is not a supported feature of the WLCG
        token discovery proposal.  Further, every tool so far written
        simply extracts the access_key from the json, without looking
        at the expires attribute.

diff --git a/src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py b/src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py
index 2f447da..c256a86 100644
--- a/src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py
+++ b/src/condor_credd/condor_credmon_oauth/credmon/CredentialMonitors/LocalCredmon.py
@@ -1,12 +1,14 @@
 
 import os
 import glob
+import json
+import tempfile
 
 import scitokens
 import htcondor
 
 from credmon.CredentialMonitors.OAuthCredmon import OAuthCredmon
-from credmon.utils import atomic_output_json
+from credmon.utils import atomic_rename
 
 class LocalCredmon(OAuthCredmon):
     """
@@ -23,6 +25,7 @@ class LocalCredmon(OAuthCredmon):
         self.token_issuer = None
         self.authz_template = "read:/user/{username} write:/user/{username}"
         self.token_lifetime = 60*20
+        self.token_use_json = True
         if htcondor != None:
             self._private_key_location = htcondor.param.get('LOCAL_CREDMON_PRIVATE_KEY', "/etc/condor/scitokens-private.pem")
             if self._private_key_location != None and os.path.exists(self._private_key_location):
@@ -35,6 +38,7 @@ class LocalCredmon(OAuthCredmon):
             self.token_issuer = htcondor.param.get("LOCAL_CREDMON_ISSUER", self.token_issuer)
             self.authz_template = htcondor.param.get("LOCAL_CREDMON_AUTHZ_TEMPLATE", self.authz_template)
             self.token_lifetime = htcondor.param.get("LOCAL_CREDMON_TOKEN_LIFETIME", self.token_lifetime)
+            self.token_use_json = htcondor.param.get("LOCAL_CREDMON_TOKEN_USE_JSON", self.token_use_json)
         else:
             self._private_key_location = None
         if not self.token_issuer:
@@ -63,18 +67,32 @@ class LocalCredmon(OAuthCredmon):
             self.log.exception("Failure when attempting to serialize a SciToken, likely due to algorithm mismatch")
             return False
 
-        oauth_response = {"access_token": serialized_token.decode(),
-                          "expires_in":   int(self.token_lifetime)}
+        # copied from the Vault credmon
+        (tmp_fd, tmp_access_token_path) = tempfile.mkstemp(dir = self.cred_dir)
+        with os.fdopen(tmp_fd, 'w') as f:
+            if self.token_use_json:
+                # use JSON if configured to do so, i.e. when
+                # LOCAL_CREDMON_TOKEN_USE_JSON = True (default)
+                f.write(json.dumps({
+                    "access_token": serialized_token.decode(),
+                    "expires_in":   int(self.token_lifetime),
+                }))
+            else:
+                # otherwise write a bare token string when
+                # LOCAL_CREDMON_TOKEN_USE_JSON = False
+                f.write(serialized_token.decode()+'\n')
 
         access_token_path = os.path.join(self.cred_dir, username, token_name + '.use')
 
+        # atomically move new file into place
         try:
-            atomic_output_json(oauth_response, access_token_path)
-        except OSError as oe:
+            atomic_rename(tmp_access_token_path, access_token_path)
+        except OSError as e:
             self.log.exception("Failure when writing out new access token to {}: {}.".format(
-                access_token_path, str(oe)))
+                access_token_path, str(e)))
             return False
-        return True
+        else:
+            return True
 
     def process_cred_file(self, cred_fname):
         """
diff --git a/src/condor_credd/condor_credmon_oauth/examples/config/condor/40-oauth-credmon.conf b/src/condor_credd/condor_credmon_oauth/examples/config/condor/40-oauth-credmon.conf
index 6cd2215..7f2b568 100644
--- a/src/condor_credd/condor_credmon_oauth/examples/config/condor/40-oauth-credmon.conf
+++ b/src/condor_credd/condor_credmon_oauth/examples/config/condor/40-oauth-credmon.conf
@@ -52,6 +52,11 @@ use feature : OAUTH
 # Each key must have a name that relying parties can look up; defaults to "local"
 # LOCAL_CREDMON_KEY_ID = local
 
+# Should the local issuer credmon write access tokens as JSON files (default)
+# LOCAL_CREDMON_TOKEN_USE_JSON = true
+# or as bare strings (LOCAL_CREDMON_TOKEN_USE_JSON = false)
+# LOCAL_CREDMON_TOKEN_USE_JSON = false
+
 # Override the location of the credential directory, credmon daemon, or credmon log
 # SEC_CREDENTIAL_DIRECTORY_OAUTH = /var/lib/condor/oauth_credentials
 # CREDMON_OAUTH_LOG = $(LOG)/CredMonOAuthLog
diff --git a/src/condor_utils/param_info.in b/src/condor_utils/param_info.in
index 74e96fa..9d2a699 100644
--- a/src/condor_utils/param_info.in
+++ b/src/condor_utils/param_info.in
@@ -5522,6 +5522,10 @@ default=$(SBIN)/condor_credmon_oauth
 win32_default=
 type=path
 
+[LOCAL_CREDMON_TOKEN_USE_JSON]
+default=true
+type=bool
+
 # standard API endpoints for common OAuth token providers
 [BOX_AUTHORIZATION_URL]
 default=https://account.box.com/api/oauth2/authorize
