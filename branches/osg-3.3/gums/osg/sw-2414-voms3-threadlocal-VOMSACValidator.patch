From 769044b312d510ab9b77c81ebbfa0d0b21f76450 Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelm@cse.unl.edu>
Date: Tue, 2 Aug 2016 14:26:03 -0500
Subject: [PATCH] Switch VOMSACValidator to a thread-local object.

The VOMSACValidator spawns a helper thread for each instance and re-loads
the CRLs for each new instance.  Hence, it's too heavyweight to do an instance
per validation request.

OTOH, the actual validation is done in a synchronized method, meaning only one
thread can validate at a time per VOMSACValidator object.  So, it's also
inappropriate to be a global object.

Here, I split the difference and have it be a thread-local.
---
 gums-core/src/main/java/gov/bnl/gums/admin/CertCache.java | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/gums-core/src/main/java/gov/bnl/gums/admin/CertCache.java b/gums-core/src/main/java/gov/bnl/gums/admin/CertCache.java
index c63546d..3d9de5e 100644
--- a/gums-core/src/main/java/gov/bnl/gums/admin/CertCache.java
+++ b/gums-core/src/main/java/gov/bnl/gums/admin/CertCache.java
@@ -34,6 +34,9 @@
 public class CertCache implements Filter {
 	static private Logger log = Logger.getLogger(CertCache.class);
 	static private ServletContext context;
+
+        static private ThreadLocal<VOMSACValidator> validator = new ThreadLocal();
+
 	// If you add a new variable here, make sure to add it to
 	// the reset method.
 	static private ThreadLocal certificate = new ThreadLocal();
@@ -41,6 +44,7 @@
 	static private ThreadLocal<String> dn = new ThreadLocal();
 	static private ThreadLocal<String> fqan = new ThreadLocal();
 
+
 	/**
 	 * Get the directory path for the configuration files
 	 * 
@@ -110,8 +114,12 @@ static public void setUserCertificateChain(X509Certificate[] chain) {
 		} else {
 			certificate.set(cert);
 		}
-		VOMSACValidator validator = VOMSValidators.newValidator();
-		List<VOMSAttribute> attrs = validator.validate(chain);
+                VOMSACValidator local_validator = validator.get();
+                if (local_validator == null) {
+                      local_validator = VOMSValidators.newValidator();
+                      validator.set(local_validator);
+                }
+		List<VOMSAttribute> attrs = local_validator.validate(chain);
 		for (VOMSAttribute attr : attrs) {
 			for (String fqan_str : attr.getFQANs()) {
 				fqan.set(fqan_str);
