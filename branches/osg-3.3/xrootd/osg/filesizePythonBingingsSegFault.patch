Index: xrootd-4.2.1/bindings/python/libs/client/utils.py
===================================================================
--- xrootd-4.2.1.orig/bindings/python/libs/client/utils.py
+++ xrootd-4.2.1/bindings/python/libs/client/utils.py
@@ -26,12 +26,15 @@ class CallbackWrapper(object):
     self.callback = callback
     self.responsetype = responsetype
 
-  def __call__(self, status, response, hostlist):
+  def __call__(self, status, response, *argv):
     self.status = XRootDStatus(status)
     self.response = response
     if self.responsetype:
       self.response = self.responsetype(response)
-    self.hostlist = HostList(hostlist)
+    if argv:
+      self.hostlist = HostList(argv[0])
+    else:
+      self.hostlist = HostList([])
     self.callback(self.status, self.response, self.hostlist)
 
 class AsyncResponseHandler(object):
Index: xrootd-4.2.1/bindings/python/src/AsyncResponseHandler.hh
===================================================================
--- xrootd-4.2.1.orig/bindings/python/src/AsyncResponseHandler.hh
+++ xrootd-4.2.1/bindings/python/src/AsyncResponseHandler.hh
@@ -28,7 +28,6 @@
 #include "PyXRootD.hh"
 #include "Conversions.hh"
 #include "Utils.hh"
-
 #include "XrdCl/XrdClXRootDResponses.hh"
 
 namespace PyXRootD
@@ -47,6 +46,11 @@ namespace PyXRootD
           callback( callback ), state( PyGILState_UNLOCKED ) {}
 
       //------------------------------------------------------------------------
+      //! Destructor
+      //------------------------------------------------------------------------
+      virtual ~AsyncResponseHandler() {};
+
+      //------------------------------------------------------------------------
       //! Handle the asynchronous response call
       //------------------------------------------------------------------------
       void HandleResponseWithHosts( XrdCl::XRootDStatus *status,
@@ -58,6 +62,9 @@ namespace PyXRootD
         //----------------------------------------------------------------------
         state = PyGILState_Ensure();
         if ( InitTypes() != 0) {
+          delete status;
+          delete response;
+          delete hostList;
           return Exit();
         }
 
@@ -66,6 +73,9 @@ namespace PyXRootD
         //----------------------------------------------------------------------
         PyObject *pystatus = ConvertType<XrdCl::XRootDStatus>( status );
         if ( !pystatus || PyErr_Occurred() ) {
+          delete status;
+          delete response;
+          delete hostList;
           return Exit();
         }
 
@@ -76,6 +86,10 @@ namespace PyXRootD
         if ( response != NULL) {
           pyresponse = ParseResponse( response );
           if ( pyresponse == NULL || PyErr_Occurred() ) {
+            Py_XDECREF( pystatus );
+            delete status;
+            delete response;
+            delete hostList;
             return Exit();
           }
         }
@@ -87,6 +101,11 @@ namespace PyXRootD
         if ( hostList != NULL ) {
           pyhostlist = ConvertType<XrdCl::HostList>( hostList );
           if ( pyhostlist == NULL || PyErr_Occurred() ) {
+            Py_XDECREF( pystatus );
+            Py_XDECREF( pyresponse );
+            delete status;
+            delete response;
+            delete hostList;
             return Exit();
           }
         }
@@ -97,6 +116,12 @@ namespace PyXRootD
         if (pyresponse == NULL) pyresponse = Py_BuildValue( "" );
         PyObject *args = Py_BuildValue( "(OOO)", pystatus, pyresponse, pyhostlist );
         if ( !args || PyErr_Occurred() ) {
+          Py_XDECREF( pystatus );
+          Py_XDECREF( pyresponse );
+          Py_XDECREF( pyhostlist );
+          delete status;
+          delete response;
+          delete hostList;
           return Exit();
         }
 
@@ -106,6 +131,12 @@ namespace PyXRootD
         PyObject *callbackResult = PyObject_CallObject( this->callback, args );
         Py_DECREF( args );
         if ( !callbackResult || PyErr_Occurred() ) {
+          Py_XDECREF( pystatus );
+          Py_XDECREF( pyresponse );
+          Py_XDECREF( pyhostlist );
+          delete status;
+          delete response;
+          delete hostList;
           return Exit();
         }
 
@@ -120,6 +151,7 @@ namespace PyXRootD
 
         PyGILState_Release( state );
 
+        delete status;
         delete response;
         delete hostList;
         // Commit suicide...
@@ -127,6 +159,81 @@ namespace PyXRootD
       }
 
       //------------------------------------------------------------------------
+      //! Handle the asynchronous response call
+      //------------------------------------------------------------------------
+      void HandleResponse( XrdCl::XRootDStatus *status,
+                           XrdCl::AnyObject *response )
+      {
+        //----------------------------------------------------------------------
+        // Ensure we hold the Global Interpreter Lock
+        //----------------------------------------------------------------------
+        state = PyGILState_Ensure();
+        if ( InitTypes() != 0) {
+          return Exit();
+        }
+
+        //----------------------------------------------------------------------
+        // Convert the XRootDStatus object
+        //----------------------------------------------------------------------
+        PyObject *pystatus = ConvertType<XrdCl::XRootDStatus>( status );
+        if ( !pystatus || PyErr_Occurred() ) {
+          return Exit();
+        }
+
+        //----------------------------------------------------------------------
+        // Convert the response object, if any
+        //----------------------------------------------------------------------
+        PyObject *pyresponse = NULL;
+        if ( response != NULL) {
+          pyresponse = ParseResponse( response );
+          if ( pyresponse == NULL || PyErr_Occurred() ) {
+            Py_XDECREF( pystatus );
+            delete response;
+            return Exit();
+          }
+        }
+
+        //----------------------------------------------------------------------
+        // Build the callback arguments
+        //----------------------------------------------------------------------
+        if (pyresponse == NULL) pyresponse = Py_BuildValue( "" );
+        PyObject *args = Py_BuildValue( "(OO)", pystatus, pyresponse );
+        if ( !args || PyErr_Occurred() ) {
+          Py_XDECREF( pystatus );
+          Py_XDECREF( pyresponse );
+          delete response;
+          return Exit();
+        }
+
+        //----------------------------------------------------------------------
+        // Invoke the Python callback
+        //----------------------------------------------------------------------
+        PyObject *callbackResult = PyObject_CallObject( this->callback, args );
+        Py_DECREF( args );
+        if ( !callbackResult || PyErr_Occurred() ) {
+          Py_XDECREF( pystatus );
+          Py_XDECREF( pyresponse );
+          delete response;
+          return Exit();
+        }
+
+        //----------------------------------------------------------------------
+        // Clean up
+        //----------------------------------------------------------------------
+        Py_XDECREF( pystatus );
+        Py_XDECREF( pyresponse );
+        Py_XDECREF( callbackResult );
+        Py_XDECREF( this->callback );
+
+        PyGILState_Release( state );
+
+        delete status;
+        delete response;
+        // Commit suicide...
+        delete this;
+      }
+
+      //------------------------------------------------------------------------
       //! Parse out and convert the AnyObject response to a mapping type
       //------------------------------------------------------------------------
       PyObject* ParseResponse( XrdCl::AnyObject *response )
@@ -145,7 +252,7 @@ namespace PyXRootD
       {
         PyErr_Print();
         PyGILState_Release( state );
-        return;
+        delete this;
       }
 
     private:
