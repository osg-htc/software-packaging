--- koji/ssl/SSLCommon.py	2011-08-08 12:09:28.000000000 -0500
+++ koji/ssl/SSLCommon.py	2011-08-08 12:11:30.000000000 -0500
@@ -20,6 +20,7 @@
 import httplib
 import socket
 import SocketServer
+import getpass
 
 def our_verify(connection, x509, errNum, errDepth, preverifyOK):
     # print "Verify: errNum = %s, errDepth = %s, preverifyOK = %s" % (errNum, errDepth, preverifyOK)
@@ -28,6 +29,24 @@
     # correctly authenticates against the CA chain
     return preverifyOK
 
+cached_passwd = None
+def passwd_callback(max_length, ask_twice, userdata):
+    cpass = globals()['cached_passwd']
+    if cpass:
+        return cpass
+
+    typed_pass = getpass.getpass("Enter PEM pass phrase: ")
+    if len(typed_pass) > max_length:
+        print "Password is longer than what OpenSSL is able to handle"
+        return False
+
+    if ask_twice:
+        typed_pass2 = getpass.getpass("Please enter password again for verification: ")
+        if typed_pass != typed_pass2:
+            return False
+
+    globals()['cached_passwd'] = typed_pass
+    return typed_pass
 
 def CreateSSLContext(certs):
     key_and_cert = certs['key_and_cert']
@@ -38,6 +57,7 @@
             raise StandardError, "%s does not exist or is not readable" % f
 
     ctx = SSL.Context(SSL.SSLv3_METHOD)   # SSLv3 only
+    ctx.set_passwd_cb(passwd_callback, None)
     ctx.use_certificate_file(key_and_cert)
     ctx.use_privatekey_file(key_and_cert)
     ctx.load_client_ca(ca_cert)
