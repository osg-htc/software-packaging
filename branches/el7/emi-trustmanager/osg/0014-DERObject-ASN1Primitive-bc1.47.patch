From 8aa3564d5c9ba13913af8ee62dd495e971d4810e Mon Sep 17 00:00:00 2001
From: Matyas Selmeci <matyas@cs.wisc.edu>
Date: Tue, 25 Nov 2014 20:47:17 -0600
Subject: [PATCH 14/26] DERObject -> ASN1Primitive (bc1.47)

---
 src/org/glite/security/util/proxy/ProxyCertInfoExtension.java  |  6 +++---
 .../glite/security/util/proxy/ProxyCertificateGenerator.java   | 10 +++++-----
 src/org/glite/security/util/proxy/ProxyPolicy.java             |  6 +++---
 src/org/glite/security/util/proxy/ProxyRestrictionData.java    |  6 +++---
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/src/org/glite/security/util/proxy/ProxyCertInfoExtension.java b/src/org/glite/security/util/proxy/ProxyCertInfoExtension.java
index 384cde1..eaaed62 100644
--- a/src/org/glite/security/util/proxy/ProxyCertInfoExtension.java
+++ b/src/org/glite/security/util/proxy/ProxyCertInfoExtension.java
@@ -24,7 +24,7 @@ import org.bouncycastle.asn1.ASN1EncodableVector;
 import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.ASN1Sequence;
 import org.bouncycastle.asn1.DERInteger;
-import org.bouncycastle.asn1.DERObject;
+import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.DERSequence;
 
 /**
@@ -141,7 +141,7 @@ public class ProxyCertInfoExtension extends ASN1Object {
      * Return the extension in DER format.
      * @see org.bouncycastle.asn1.ASN1Object#toASN1Primitive()
      */
-    public DERObject toASN1Primitive() {
+    public ASN1Primitive toASN1Primitive() {
         ASN1EncodableVector v = new ASN1EncodableVector();
         if (m_pathLen > -1) {
             v.add(new DERInteger(m_pathLen));
@@ -155,7 +155,7 @@ public class ProxyCertInfoExtension extends ASN1Object {
         return new DERSequence(v);
     }
 
-    public DERObject toASN1Object() {
+    public ASN1Primitive toASN1Object() {
         return this.toASN1Primitive();
     }
 
diff --git a/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java b/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
index f2381da..e568d52 100644
--- a/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
+++ b/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
@@ -40,7 +40,7 @@ import org.apache.log4j.Logger;
 import org.bouncycastle.asn1.ASN1EncodableVector;
 import org.bouncycastle.asn1.ASN1Sequence;
 import org.bouncycastle.asn1.ASN1Encodable;
-import org.bouncycastle.asn1.DERObject;
+import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.ASN1ObjectIdentifier;
 import org.bouncycastle.asn1.DEROctetString;
 import org.bouncycastle.asn1.DERPrintableString;
@@ -401,7 +401,7 @@ public class ProxyCertificateGenerator {
         ASN1EncodableVector subjectVector = new ASN1EncodableVector();
 
         while (subjectParts.hasMoreElements()) {
-            DERObject part = (DERObject) subjectParts.nextElement();
+            ASN1Primitive part = (ASN1Primitive) subjectParts.nextElement();
             subjectVector.add(part);
         }
 
@@ -425,7 +425,7 @@ public class ProxyCertificateGenerator {
      */
     private String guessCN(X509Name basename, boolean addLimited) {
         String newCN;
-        ASN1Sequence subjectSequence = (ASN1Sequence) basename.getDERObject();
+        ASN1Sequence subjectSequence = (ASN1Sequence) basename.getASN1Primitive();
         int rdns = subjectSequence.size();
         DERSet rdn = (DERSet) subjectSequence.getObjectAt(rdns - 1);
         DERSequence rdnSequence = (DERSequence) rdn.getObjectAt(0);
@@ -461,7 +461,7 @@ public class ProxyCertificateGenerator {
      */
     @SuppressWarnings("unchecked")
     private void setupDNs(String newCn) {
-        ASN1Sequence seqSubject = (ASN1Sequence) m_baseName.getDERObject();
+        ASN1Sequence seqSubject = (ASN1Sequence) m_baseName.getASN1Primitive();
 
         ASN1EncodableVector newCnPart = new ASN1EncodableVector();
         newCnPart.add(X509Name.CN);
@@ -472,7 +472,7 @@ public class ProxyCertificateGenerator {
         ASN1EncodableVector subjectVector = new ASN1EncodableVector();
 
         while (subjectParts.hasMoreElements()) {
-            DERObject part = (DERObject) subjectParts.nextElement();
+            ASN1Primitive part = (ASN1Primitive) subjectParts.nextElement();
             subjectVector.add(part);
         }
 
diff --git a/src/org/glite/security/util/proxy/ProxyPolicy.java b/src/org/glite/security/util/proxy/ProxyPolicy.java
index 2a44fe4..166c002 100644
--- a/src/org/glite/security/util/proxy/ProxyPolicy.java
+++ b/src/org/glite/security/util/proxy/ProxyPolicy.java
@@ -22,7 +22,7 @@ import org.bouncycastle.asn1.ASN1Object;
 import org.bouncycastle.asn1.ASN1EncodableVector;
 import org.bouncycastle.asn1.ASN1OctetString;
 import org.bouncycastle.asn1.ASN1Sequence;
-import org.bouncycastle.asn1.DERObject;
+import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.ASN1ObjectIdentifier;
 import org.bouncycastle.asn1.DEROctetString;
 import org.bouncycastle.asn1.DERSequence;
@@ -138,7 +138,7 @@ public class ProxyPolicy extends ASN1Object {
      * 
      * @see org.bouncycastle.asn1.ASN1Object#toASN1Primitive()
      */
-    public DERObject toASN1Primitive() {
+    public ASN1Primitive toASN1Primitive() {
         ASN1EncodableVector v = new ASN1EncodableVector();
         v.add(new ASN1ObjectIdentifier(m_oid));
         if (m_policy != null) {
@@ -148,7 +148,7 @@ public class ProxyPolicy extends ASN1Object {
         return new DERSequence(v);
     }
 
-    public DERObject toASN1Object() {
+    public ASN1Primitive toASN1Object() {
         return this.toASN1Primitive();
     }
 
diff --git a/src/org/glite/security/util/proxy/ProxyRestrictionData.java b/src/org/glite/security/util/proxy/ProxyRestrictionData.java
index 1771c9d..ea9fa08 100644
--- a/src/org/glite/security/util/proxy/ProxyRestrictionData.java
+++ b/src/org/glite/security/util/proxy/ProxyRestrictionData.java
@@ -25,7 +25,7 @@ import org.bouncycastle.asn1.ASN1EncodableVector;
 import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.ASN1OctetString;
 import org.bouncycastle.asn1.ASN1Sequence;
-import org.bouncycastle.asn1.DERObject;
+import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.DERSequence;
 import org.bouncycastle.asn1.DERTaggedObject;
 import org.bouncycastle.asn1.x509.GeneralName;
@@ -165,9 +165,9 @@ public class ProxyRestrictionData {
      * @param vector The target to copy the parsed GeneralSubtree objects.
      */
     private static void copyCondSequenceToVector(DERSequence subSeq, Vector<GeneralSubtree> vector) {
-        Enumeration<DERObject> subTreeEnum = subSeq.getObjects();
+        Enumeration<ASN1Primitive> subTreeEnum = subSeq.getObjects();
         while (subTreeEnum.hasMoreElements()) {
-            DERObject object = subTreeEnum.nextElement();
+            ASN1Primitive object = subTreeEnum.nextElement();
             vector.add(new GeneralSubtree((ASN1Sequence) object));
         }
     }
-- 
2.0.1

