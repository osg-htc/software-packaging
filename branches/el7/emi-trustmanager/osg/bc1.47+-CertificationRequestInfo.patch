From 2578c57e7a7d29054174e361b1c212fe9d2d2537 Mon Sep 17 00:00:00 2001
From: Matyas Selmeci <matyas@cs.wisc.edu>
Date: Tue, 25 Nov 2014 19:26:50 -0600
Subject: [PATCH] Convert X500Name to X509Name via ASN1Primitive (bc1.47)

First attempt at handling CertificationRequestInfo.getSubject()'s return
type change: convert the X500Name to an X509Name by turning it into an
ASN1Primitive and using X509Name.getInstance on it.

The problem with the getInstance() methods is I have no idea at compile
time whether it will work -- it can take _any Object_ as an argument,
and so presumably throws runtime errors when it gets something it can't
handle.
diff --git
c/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
i/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java index
6c77810..e4cf2fe 100644 ---
c/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java +++
i/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java @@
-157,7 +157,7 @@ public class ProxyCertificateGenerator {

         // m_certReq = certReq;
         m_publicKey = certReq.getPublicKey();
-        m_newDN = certReq.getCertificationRequestInfo().getSubject();
+        m_newDN = X509Name.getInstance(certReq.getCertificationRequestInfo().getSubject().toASN1Primitive());
         /*
          * // test for DN violation, the new DN must be composed of the parentDN // and and additional CN component. DN
          * baseDN = DNHandler.getSubject(m_parentCert); DN reqSubject = DNHandler.getDN(m_newDN); try{
---
 src/org/glite/security/util/proxy/ProxyCertificateGenerator.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java b/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
index 6c77810..e4cf2fe 100644
--- a/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
+++ b/src/org/glite/security/util/proxy/ProxyCertificateGenerator.java
@@ -157,7 +157,7 @@ public class ProxyCertificateGenerator {
 
         // m_certReq = certReq;
         m_publicKey = certReq.getPublicKey();
-        m_newDN = certReq.getCertificationRequestInfo().getSubject();
+        m_newDN = X509Name.getInstance(certReq.getCertificationRequestInfo().getSubject().toASN1Primitive());
         /*
          * // test for DN violation, the new DN must be composed of the parentDN // and and additional CN component. DN
          * baseDN = DNHandler.getSubject(m_parentCert); DN reqSubject = DNHandler.getDN(m_newDN); try{
-- 
2.0.1

