Index: emi-trustmanager-3.0.3/src/org/glite/security/trustmanager/OpensslTrustmanager.java
===================================================================
--- emi-trustmanager-3.0.3.orig/src/org/glite/security/trustmanager/OpensslTrustmanager.java	2014-11-12 00:51:07.133095017 -0600
+++ emi-trustmanager-3.0.3/src/org/glite/security/trustmanager/OpensslTrustmanager.java	2014-11-25 11:49:23.035650318 -0600
@@ -27,6 +27,7 @@
 import javax.net.ssl.X509TrustManager;
 
 import org.apache.log4j.Logger;
+import org.bouncycastle.asn1.ASN1Encoding;
 import org.bouncycastle.asn1.x509.X509Name;
 import org.bouncycastle.crypto.digests.MD5Digest;
 import org.glite.security.util.CaseInsensitiveProperties;
@@ -129,11 +130,12 @@
      * of 8 least significant bytes of a MD5 digest of the the ASN.1 encoded DN.
      * 
      * @param subject the DN to hash.
+     * @throws IOException thrown in case of encoding error
      * @return the 8 character string of the hexadecimal hash.
      */
     @SuppressWarnings("boxing")
-    public static String getOpenSSLCAHash(X509Name subject) {
-        byte[] bytes = subject.getDEREncoded();
+    public static String getOpenSSLCAHash(X509Name subject) throws IOException {
+        byte[] bytes = subject.getEncoded(ASN1Encoding.DER);
 
         MD5Digest digest = new MD5Digest();
         digest.update(bytes, 0, bytes.length);
@@ -172,7 +174,7 @@
      * @param cert the certificate from which the subject DN is taken and hashed.
      * @return the 8 character string of the hexadecimal hash.
      */
-    public static String getOpenSSLCAHash(X509Certificate cert) {
+    public static String getOpenSSLCAHash(X509Certificate cert) throws IOException {
         X509Name subject = (X509Name) cert.getSubjectDN();
 
         return getOpenSSLCAHash(subject);
Index: emi-trustmanager-3.0.3/src/org/glite/security/trustmanager/OpensslCertPathValidator.java
===================================================================
--- emi-trustmanager-3.0.3.orig/src/org/glite/security/trustmanager/OpensslCertPathValidator.java	2014-11-12 00:51:07.000000000 -0600
+++ emi-trustmanager-3.0.3/src/org/glite/security/trustmanager/OpensslCertPathValidator.java	2014-11-25 14:23:50.015350981 -0600
@@ -152,7 +152,13 @@
         } else {
             issuerDN = new X509Name(true, firstCert.getIssuerX500Principal().getName());
         }
-        String hash = OpensslTrustmanager.getOpenSSLCAHash(issuerDN);
+        String hash;
+        try {
+            hash = OpensslTrustmanager.getOpenSSLCAHash(issuerDN);
+        } catch (IOException e) {
+            LOGGER.info("getOpenSSLCAHash threw an exception: " + e.getMessage());
+            return false;
+        }
 
         FullTrustAnchor acceptedAnchor = null;
 
@@ -217,7 +223,13 @@
             } else {
                 subjectDN = new X509Name(true, caCert.getIssuerX500Principal().getName());
             }
-            String hash = OpensslTrustmanager.getOpenSSLCAHash(subjectDN);
+            String hash;
+            try {
+                hash = OpensslTrustmanager.getOpenSSLCAHash(subjectDN);
+            } catch (IOException e) {
+                LOGGER.info("getOpenSSLCAHash threw an exception: " + e.getMessage());
+                throw new CertPathValidatorException("Could not get hash of subject DN " + subjectDN);
+            }
 
             FullTrustAnchor acceptedAnchor = null;
 
@@ -657,7 +669,13 @@
         } else {
             subjectDN = new X509Name(true, caCert.getIssuerX500Principal().getName());
         }
-        String hash = OpensslTrustmanager.getOpenSSLCAHash(subjectDN);
+        String hash;
+        try {
+            hash = OpensslTrustmanager.getOpenSSLCAHash(subjectDN);
+        } catch (IOException e) {
+            LOGGER.info("getOpenSSLCAHash threw an exception: " + e.getMessage());
+            throw new CertPathValidatorException("Could not get hash of subject DN " + subjectDN);
+        }
 
         FullTrustAnchor currentAnchor = null;
 
