--- globus_gatekeeper.c.~1~	2011-08-09 11:31:59.000000000 -0500
+++ globus_gatekeeper.c	2011-09-02 18:13:35.000000000 -0500
@@ -465,6 +465,40 @@
     return newfilename;
 }
 
+void
+setup_signals()
+{
+    /*
+     * Setup signal handlers to reap processes that we create
+     * Note we explicitly unblock the signals, as Globus otherwise grabs them.
+     */
+    {
+        struct sigaction act;
+        act.sa_handler = reaper;
+        sigemptyset(&act.sa_mask);
+        sigaddset(&act.sa_mask, SIGCHLD);
+        act.sa_flags = 0;
+        sigaction(SIGCHLD, &act, NULL);
+        sigprocmask(SIG_UNBLOCK, &act.sa_mask, NULL);
+        if (!run_from_inetd)
+        {
+            act.sa_handler = terminate;
+            sigemptyset(&act.sa_mask);
+            sigaddset(&act.sa_mask, SIGTERM);
+            act.sa_flags = 0;
+            sigaction(SIGTERM, &act, NULL);
+            sigprocmask(SIG_UNBLOCK, &act.sa_mask, NULL);
+        }
+        act.sa_handler = rotatelog;
+        sigemptyset(&act.sa_mask);
+        sigaddset(&act.sa_mask, SIGUSR1);
+        act.sa_flags = 0;
+        sigaction(SIGUSR1, &act, NULL);
+        sigprocmask(SIG_UNBLOCK, &act.sa_mask, NULL);
+    }
+    
+}
+
 /******************************************************************************
 Function:       main()
 Description:    
@@ -892,33 +926,9 @@
     notice4(LOG_INFO, "%s pid=%d starting at %s",
             argv[0], getpid(), timestamp());
 
-    /*
-     * Setup SIGCHLD signal handler to reap processes that we create
-     */
-    {
-        struct sigaction act;
-        act.sa_handler = reaper;
-        sigemptyset(&act.sa_mask);
-        sigaddset(&act.sa_mask, SIGCHLD);
-        act.sa_flags = 0;
-        sigaction(SIGCHLD, &act, NULL);
-        if (!run_from_inetd)
-        {
-            act.sa_handler = terminate;
-            sigemptyset(&act.sa_mask);
-            sigaddset(&act.sa_mask, SIGTERM);
-            act.sa_flags = 0;
-            sigaction(SIGTERM, &act, NULL);
-        }
-	act.sa_handler = rotatelog;
-	sigemptyset(&act.sa_mask);
-	sigaddset(&act.sa_mask, SIGUSR1);
-	act.sa_flags = 0;
-	sigaction(SIGUSR1, &act, NULL);
-    }
-
     if (run_from_inetd)
     {
+        setup_signals();
         logging_phase2();
         dup2(2,1); /* point stdout at log as well */
     }
@@ -1027,15 +1037,22 @@
     }
     else
     {
-        if (!foreground)
+        if (foreground)
+        {
+            setup_signals();
+        }
+        else
         {
+            setup_signals();
             /*
              * Fork off a child, terminate the parent, and detach
              * the child from the tty.
              */
-            if (fork())
+            if (globus_libc_fork())
                 exit(0);
 
+            setup_signals();
+
 	    gatekeeper_pid = getpid();
 
             if (!logging_usrlog)
