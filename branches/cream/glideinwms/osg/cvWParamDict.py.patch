diff --git a/creation/lib/cvWParamDict.py b/creation/lib/cvWParamDict.py
index 1ac01ff..8d5d5ad 100644
--- a/creation/lib/cvWParamDict.py
+++ b/creation/lib/cvWParamDict.py
@@ -48,12 +48,12 @@ class frontendMainDicts(cvWDictFile.frontendMainDicts):
         
         # follow by the blacklist file
         file_name=cWConsts.BLACKLIST_FILE
-        self.dicts['preentry_file_list'].add_from_file(file_name,(file_name,"nocache","TRUE",'BLACKLIST_FILE'),os.path.join(params.src_dir,file_name))
+        self.dicts['preentry_file_list'].add_from_file(file_name,(file_name,"nocache","TRUE",'BLACKLIST_FILE'),os.path.join(params.work.base_dir,file_name))
 
         # Load initial system scripts
         # These should be executed before the other scripts
         for script_name in ('cat_consts.sh',"check_blacklist.sh"):
-            self.dicts['preentry_file_list'].add_from_file(script_name,(cWConsts.insert_timestr(script_name),'exec','TRUE','FALSE'),os.path.join(params.src_dir,script_name))
+            self.dicts['preentry_file_list'].add_from_file(script_name,(cWConsts.insert_timestr(script_name),'exec','TRUE','FALSE'),os.path.join(params.work.base_dir,script_name))
 
         # put user files in stage
         for file in params.files:
@@ -76,7 +76,7 @@ class frontendMainDicts(cvWDictFile.frontendMainDicts):
 
         # populate the monitor files
         javascriptrrd_dir = params.monitor.javascriptRRD_dir
-        for mfarr in ((params.src_dir,'frontend_support.js'),
+        for mfarr in ((params.work_dir,'frontend_support.js'),
                       (javascriptrrd_dir,'rrdFlot.js'),
                       (javascriptrrd_dir,'rrdFlotMatrix.js'),
                       (javascriptrrd_dir,'rrdFlotSupport.js'),
@@ -93,10 +93,10 @@ class frontendMainDicts(cvWDictFile.frontendMainDicts):
             mfobj.load()
             self.monitor_jslibs.append(mfobj)
 
-        for mfarr in ((params.src_dir,'frontendRRDBrowse.html'),
-                      (params.src_dir,'frontendRRDGroupMatrix.html'),
-                      (params.src_dir,'frontendGroupGraphStatusNow.html'),
-                      (params.src_dir,'frontendStatus.html')):
+        for mfarr in ((params.work.base_dir,'frontendRRDBrowse.html'),
+                      (params.work.base_dir,'frontendRRDGroupMatrix.html'),
+                      (params.work.base_dir,'frontendGroupGraphStatusNow.html'),
+                      (params.work.base_dir,'frontendStatus.html')):
             mfdir,mfname=mfarr
             mfobj=cWDictFile.SimpleFile(mfdir,mfname)
             mfobj.load()
@@ -181,12 +181,12 @@ class frontendGroupDicts(cvWDictFile.frontendGroupDicts):
 
         # follow by the blacklist file
         file_name=cWConsts.BLACKLIST_FILE
-        self.dicts['preentry_file_list'].add_from_file(file_name,(file_name,"nocache","TRUE",'BLACKLIST_FILE'),os.path.join(params.src_dir,file_name))
+        self.dicts['preentry_file_list'].add_from_file(file_name,(file_name,"nocache","TRUE",'BLACKLIST_FILE'),os.path.join(params.work.base_dir,file_name))
 
         # Load initial system scripts
         # These should be executed before the other scripts
         for script_name in ('cat_consts.sh',"check_blacklist.sh"):
-            self.dicts['preentry_file_list'].add_from_file(script_name,(cWConsts.insert_timestr(script_name),'exec','TRUE','FALSE'),os.path.join(params.src_dir,script_name))
+            self.dicts['preentry_file_list'].add_from_file(script_name,(cWConsts.insert_timestr(script_name),'exec','TRUE','FALSE'),os.path.join(params.work.base_dir,script_name))
 
         # put user files in stage
         for file in sub_params.files:
