Index: gums-core/src/main/java/gov/bnl/gums/CoreLogic.java
===================================================================
--- gums-core/src/main/java/gov/bnl/gums/CoreLogic.java.orig	2010-09-09 12:50:51.000000000 -0500
+++ gums-core/src/main/java/gov/bnl/gums/CoreLogic.java	2012-04-10 15:27:36.719836646 -0500
@@ -404,7 +404,6 @@
     }
 
     private String mapImpl(String hostname, GridUser user) throws Exception {
-System.out.println("drs - in mapImpl " + hostname + " " + user);
         Configuration conf = gums.getConfiguration();
         HostToGroupMapping host2GroupMapper = hostToGroupMapping(conf, hostname);
         if (host2GroupMapper == null) {
@@ -412,27 +411,19 @@
             gumsAdminLog.warn(message);
         	throw new RuntimeException(message);
         }
-System.out.println("drs - have a host2GroupMapper " + host2GroupMapper);
 
         Iterator g2AMappingsIt = host2GroupMapper.getGroupToAccountMappings().iterator();
         while (g2AMappingsIt.hasNext()) {
             GroupToAccountMapping g2AMapping = (GroupToAccountMapping) conf.getGroupToAccountMapping( (String)g2AMappingsIt.next() );
-System.out.println("drs - have a GroupToAccountMapping " + g2AMapping);
             Collection userGroups = g2AMapping.getUserGroups();
             Iterator userGroupsIt = userGroups.iterator();
             while (userGroupsIt.hasNext()) {
             	UserGroup userGroup = (UserGroup) conf.getUserGroup( (String)userGroupsIt.next() );
-System.out.println("drs have userGrouip " + userGroup);
-System.out.println("drs - see if " + user + " is in the userGroup");
                 if (userGroup.isInGroup(user)) {
-System.out.println("drs - it is!");
                 	Collection accountMappers = g2AMapping.getAccountMappers();
                     Iterator accountMappersIt = accountMappers.iterator();
-System.out.println("drs Iterate thru accountMappers");
                     while (accountMappersIt.hasNext()) {
                     	AccountMapper accountMapper = (AccountMapper) conf.getAccountMapper( (String)accountMappersIt.next() );
-System.out.println("drs have accountMapper " + accountMapper);
-System.out.println("drs call accountMapper.mapUser(" + user);
                         String localUser = accountMapper.mapUser(user, true);
                         if (localUser != null)
                             return localUser;
Index: gums-core/src/main/java/gov/bnl/gums/persistence/HibernatePersistenceFactory.java
===================================================================
--- gums-core/src/main/java/gov/bnl/gums/persistence/HibernatePersistenceFactory.java.orig	2010-09-20 13:36:48.000000000 -0500
+++ gums-core/src/main/java/gov/bnl/gums/persistence/HibernatePersistenceFactory.java	2012-04-10 15:27:53.796084587 -0500
@@ -76,7 +76,6 @@
 	 */
 	public HibernatePersistenceFactory() {
     	log.trace("HibernatePersistenceFactory instanciated");
-	log.info("drs - HibernatePersistenceFactory - no arg constructor");
     	timer.scheduleAtFixedRate(closeExpiredSessions, new Date(new Date().getTime()+expireTime), expireTime);
     }
     
@@ -88,7 +87,6 @@
     public HibernatePersistenceFactory(Configuration configuration) {
     	super(configuration);
     	log.trace("HibernatePersistenceFactory instanciated");
-	log.info("drs - HibernatePersistenceFactory - constructor with configuration");
     	timer.scheduleAtFixedRate(closeExpiredSessions, new Date(new Date().getTime()+expireTime), expireTime);
     }    
 
@@ -101,12 +99,10 @@
     public HibernatePersistenceFactory(Configuration configuration, String name) {
     	super(configuration, name);
     	log.trace("HibernatePersistenceFactory instanciated");
-	log.info("drs - HibernatePersistenceFactory - constructed with configuration and name " + name);
     	timer.scheduleAtFixedRate(closeExpiredSessions, new Date(new Date().getTime()+60000), 60000);
     }
     
     public PersistenceFactory clone(Configuration configuration) {
-	log.info("drs - HibernatePersistenceFactory cloned");
     	HibernatePersistenceFactory persistenceFactory = new HibernatePersistenceFactory(configuration, new String(getName()));
     	persistenceFactory.setDescription(new String(getDescription()));
     	persistenceFactory.setStoreConfig(getStoreConfig());
@@ -167,7 +163,6 @@
 	}
 
 	public SessionFactory retrieveSessionFactory() throws Exception {
-		log.info("drs - in HibernatePersistenceFactory.retrieveSessionFactory");
 		if (sessionFactory == null) {
 			synchronized(propertyToPFSessionCreatorMap) {
 				// If there's a hibernate persistence factory with the same properties, use it, 
@@ -191,9 +186,6 @@
 	}
 	
     private SessionFactory buildSessionFactory() {
-		log.info("drs - in HibernatePersistenceFactory.buildSessionFactory");
-System.out.println("drs - In buildSessionFactory");
-System.out.println("drs - properties are " + getProperties());
 
         try {
             log.trace("Creating Hibernate Session Factory with the following properties: " + getProperties());
Index: gums-core/src/test/java/gov/bnl/gums/db/HibernateUserTest.java
===================================================================
--- gums-core/src/test/java/gov/bnl/gums/db/HibernateUserTest.java.orig	2010-07-02 15:02:04.000000000 -0500
+++ gums-core/src/test/java/gov/bnl/gums/db/HibernateUserTest.java	2012-04-10 15:27:21.213085041 -0500
@@ -27,29 +27,17 @@
             user.setDn("/DC=org/DC=griddev/OU=People/CN=John Smith");
             user.setGroup("test");
             sess.save(user);
-            System.out.println("drs - 7");
             Long id = user.getId();
-            System.out.println("drs - 8");
             trans.commit();
-            System.out.println("drs - 9");
             trans = sess.beginTransaction();
-            System.out.println("drs - 10");
             HibernateUser user2 = (HibernateUser) sess.load(HibernateUser.class, id);
-            System.out.println("drs - 11");
             assertEquals("/DC=org/DC=griddev/OU=People/CN=John Smith", user2.getDn());
-            System.out.println("drs - 12");
             sess.delete(user2);
-            System.out.println("drs - 13");
             trans.commit();
-            System.out.println("drs - 14");
             trans = sess.beginTransaction();
-            System.out.println("drs - 15");
             assertEquals(sess.get(HibernateUser.class, id), null);
-            System.out.println("drs - 16");
             trans.commit();
-            System.out.println("drs - 17");
             sess.close();
-            System.out.println("drs - 18");
         } catch (Exception e) {
             e.printStackTrace();
             fail("Hibernate exception " + e);
