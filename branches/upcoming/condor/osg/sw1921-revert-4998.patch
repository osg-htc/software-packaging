diff --git a/build/cmake/CondorConfigure.cmake b/build/cmake/CondorConfigure.cmake
index 33a69ee..3453c8f 100644
--- a/build/cmake/CondorConfigure.cmake
+++ b/build/cmake/CondorConfigure.cmake
@@ -933,8 +933,11 @@ set (CONDOR_LIBS_STATIC "condor_utils_s;classads;${SECURITY_LIBS_STATIC};${RT_FO
 set (CONDOR_LIBS "condor_utils;${RT_FOUND};${CLASSADS_FOUND};${SECURITY_LIBS};${PCRE_FOUND};${COREDUMPER_FOUND}")
 set (CONDOR_TOOL_LIBS "condor_utils;${RT_FOUND};${CLASSADS_FOUND};${SECURITY_LIBS};${PCRE_FOUND};${COREDUMPER_FOUND}")
 set (CONDOR_SCRIPT_PERMS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
-if (LINUX)
+if (LINUX OR DARWIN)
   set (CONDOR_LIBS_FOR_SHADOW "condor_utils_s;classads;${SECURITY_LIBS};${RT_FOUND};${PCRE_FOUND};${OPENSSL_FOUND};${KRB5_FOUND};${POSTGRESQL_FOUND};${COREDUMPER_FOUND};${IOKIT_FOUND};${COREFOUNDATION_FOUND}")
+  if (DARWIN)
+    set (CONDOR_LIBS_FOR_SHADOW "${CONDOR_LIBS_FOR_SHADOW};resolv" )
+  endif (DARWIN)
 else ()
   set (CONDOR_LIBS_FOR_SHADOW "${CONDOR_LIBS}")
 endif ()
diff --git a/src/classad/fnCall.cpp b/src/classad/fnCall.cpp
index 383d6f2..60d6af3 100644
--- a/src/classad/fnCall.cpp
+++ b/src/classad/fnCall.cpp
@@ -334,23 +334,7 @@ bool FunctionCall::RegisterSharedLibraryFunctions(
 		
 	success = false;
 	if (shared_library_path) {
-		// We use "deep bind" here to make sure the library uses its own version of the
-		// symbol in case of duplicates.
-		//
-		// In particular, we were observing crashes in condor_shadow (which statically
-		// links libcondor_utils) and libclassad_python_user.so (which dynamically links
-		// libcondor_utils).  This causes the finalizers for global objects to be called
-		// twice - once for the dynamic version (which bound against the global one) and
-		// again at exit().
-		//
-		// With DEEPBIND, the finalizer for the dynamic library points at its own copy
-		// of the global and doesn't touch the shadow's.  See #4998
-		//
-		int flags = RTLD_LAZY;
-#ifdef LINUX
-		flags |= RTLD_DEEPBIND;
-#endif
-		dynamic_library_handle = dlopen(shared_library_path, flags);
+		dynamic_library_handle = dlopen(shared_library_path, RTLD_LAZY|RTLD_GLOBAL);
 		if (dynamic_library_handle) {
 			ClassAdSharedLibraryInit init_function;
 
diff --git a/src/condor_master.V6/CMakeLists.txt b/src/condor_master.V6/CMakeLists.txt
index f9874ed..7084ef2 100644
--- a/src/condor_master.V6/CMakeLists.txt
+++ b/src/condor_master.V6/CMakeLists.txt
@@ -22,6 +22,6 @@ file( GLOB MasterRmvElements Example* )
 condor_daemon(master "${MasterRmvElements}" "${CONDOR_LIBS};${CONDOR_QMF}" "${C_SBIN}" OFF)
 # We cannot make a proper static master as we don't have the static globus
 # libraries available
-if (NOT PROPER AND LINUX)
+if (NOT PROPER AND (LINUX OR DARWIN))
   condor_daemon(master_s "${MasterRmvElements}" "${CONDOR_LIBS_STATIC};${CONDOR_QMF}" "${C_SBIN}" OFF)
-endif(NOT PROPER AND LINUX)
+endif(NOT PROPER AND (LINUX OR DARWIN))
diff --git a/src/condor_shadow.V6.1/CMakeLists.txt b/src/condor_shadow.V6.1/CMakeLists.txt
index 272aae4..9cd3ed3 100644
--- a/src/condor_shadow.V6.1/CMakeLists.txt
+++ b/src/condor_shadow.V6.1/CMakeLists.txt
@@ -21,8 +21,8 @@
 file( GLOB shadowRmvElements Example* *.t.* )
 # We cannot make a proper static shadow as we don't have the static globus
 # libraries available
-if (NOT PROPER AND LINUX)
+if (NOT PROPER AND (LINUX OR DARWIN))
   condor_daemon( shadow_s "${shadowRmvElements}" "${CONDOR_LIBS_STATIC}" "${C_SBIN}" OFF )
-endif(NOT PROPER AND LINUX)
+endif(NOT PROPER AND (LINUX OR DARWIN))
 condor_daemon( shadow "${shadowRmvElements}" "${CONDOR_LIBS_FOR_SHADOW}" "${C_SBIN}" OFF )
 
