--- netlogger/parsers/modules/gridftp_auth.py	2012-09-14 16:24:17.045366232 -0500
+++ netlogger/parsers/modules/gridftp_auth.py	2012-09-14 16:25:57.022124135 -0500
@@ -33,6 +33,8 @@
         BaseParser.__init__(self, f, fullname=__name__, **kw)
         self._batch = [ ]
         self._cur_pid = None
+        self.host = None
+        self.port = None
         self._gen_errs = error_events
         if self._gen_errs:
             self._hdr_host = None
@@ -46,6 +48,22 @@
         pid_str = '^\[(\d+)\]'
         self._line_re = re.compile(pid_str + '(.*?)::.(.*)$')
 
+    def set_hostport(self, message):
+        rcolon=message.rfind(':')
+        try:
+           self.port = int(message[rcolon+1:])
+        except ValueError:
+           raise InvalidURL("Nonnumeric port: '%s'" % message[rcolon+1:])
+        rsqbrace=message.rfind(']')
+        if rcolon-rsqbrace==1:
+           lsqbrace=message.rfind('[')
+           self.host=message[lsqbrace+1:rcolon]
+        else:
+           logtokens=message.split(':',2)
+           self.host=logtokens[1].lstrip()
+        output="Log-%s Host-%s Port-%s" % (message,self.host,self.port)
+        print output
+
     def process(self, line):
         self.log.debug("process.start", line=line)
         m = self._line_re.match(line)
@@ -60,10 +78,9 @@
         elif message.startswith('Configuration'):
             event = dict(event=ns('config'))
         elif message.startswith('New'):
-            m = re.search('from:\s*(\S+)', message)
-            host, port =  m.group(1).split(':')
-            event = dict(event=ns('conn.start'), host=host, 
-                         port=int(port))
+            self.set_hostport(message)
+            event = dict(event=ns('conn.start'), host=self.host, 
+                         port=int(self.port))
         elif message.startswith('DN'):
              m = re.search('DN\s+(\/.*)\s+successfully', message)
              event = dict(event=ns('conn.auth.dn'), DN=m.group(1))
