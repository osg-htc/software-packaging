diff --git a/src/condor_includes/condor_attributes.h b/src/condor_includes/condor_attributes.h
index bb44eae..2368073 100644
--- a/src/condor_includes/condor_attributes.h
+++ b/src/condor_includes/condor_attributes.h
@@ -903,7 +903,6 @@ extern const char ATTR_SEC_AUTHENTICATED_USER [];
 #define ATTR_WEIGHTED_RUNNING_JOBS "WeightedRunningJobs"
 
 //************* Added for EC2 Jobs ***************************//
-#define ATTR_EC2_ACCESS_KEY  "EC2AccessKey"
 #define ATTR_EC2_ACCESS_KEY_ID  "EC2AccessKeyId"
 #define ATTR_EC2_SECRET_ACCESS_KEY  "EC2SecretAccessKey"
 #define ATTR_EC2_AMI_ID  "EC2AmiID"
diff --git a/src/condor_submit.V6/submit.cpp b/src/condor_submit.V6/submit.cpp
index 36b0692..6675457 100644
--- a/src/condor_submit.V6/submit.cpp
+++ b/src/condor_submit.V6/submit.cpp
@@ -5899,30 +5899,13 @@ SetGridParams()
 							 full_path(tmp), strerror(errno));
 				exit(1);
 			}
+			fclose(fp);
 
 			StatInfo si(full_path(tmp));
 			if (si.IsDirectory()) {
 				fprintf(stderr, "\nERROR: %s is a directory\n", full_path(tmp));
 				exit(1);
 			}
-
-			// Should this depend on file checks not being disabled?
-			unsigned long fileSize = si.GetFileSize();
-			char * rawBuffer = (char *)malloc( fileSize + 1 );
-			assert( rawBuffer != NULL );
-			unsigned long totalRead = full_read( fileno(fp), rawBuffer, fileSize );
-			fclose( fp );
-			if( totalRead != fileSize ) {
-				fprintf( stderr, "Failed to completely read public key file '%s'; need %lu bytes, read only %lu.\n", tmp, fileSize, totalRead );
-				free( rawBuffer );
-				exit(1);
-			}
-			rawBuffer[ fileSize ] = '\0';
-			std::string accessKey( rawBuffer );
-			trim( accessKey );
-			buffer.formatstr( "%s = \"%s\"", ATTR_EC2_ACCESS_KEY, accessKey.c_str() );
-			InsertJobExpr( buffer.Value() );
-			free( rawBuffer );
 		}
 		buffer.formatstr( "%s = \"%s\"", ATTR_EC2_ACCESS_KEY_ID, full_path(tmp) );
 		InsertJobExpr( buffer.Value() );
