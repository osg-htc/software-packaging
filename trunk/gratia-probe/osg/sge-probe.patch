--- sge/sge_meter.cron.sh	2011-08-22 11:38:07.000000000 -0500
+++ sge/sge_meter.cron.sh	2011-08-22 11:42:16.000000000 -0500
@@ -28,18 +28,6 @@
 
 [[ -n "$1" ]] && sge_log_file="$1"
 
-# Setup the proper Grid environment
-# I need to know a default location to find this setup.sh script ??? ###
-eval `grep VDTSetupFile $probeconfig_loc`
-for Setupsh in ${VDTSetupFile} '/root/setup.sh'
-do
-  if [[ -f ${Setupsh} && -r ${Setupsh} ]]; then
-    # Should the output of this be directed to /dev/null?
-    . ${Setupsh} >/dev/null
-    break
-  fi
-done
-
 # Set the working directory, where we expect to find the following
 #    necessary files.
 if [ -d ${Meter_BinDir} ]; then
@@ -50,7 +38,7 @@
 fi
   
 # Need to be sure there is not one of these running already
-NCMeter=`ps -ef | grep sge_meter.py | grep -v grep | wc -l`
+NCMeter=`ps -ef | grep sge_meter | grep -v grep | wc -l`
 eval `grep WorkingFolder $probeconfig_loc`
 if [ ${NCMeter} -ne 0 -a -e ${WorkingFolder}/sge_meter.cron.pid ]; then
   # We might have a condor_meter.pl running, let's verify that we 
@@ -66,13 +54,13 @@
 fi
 
 # We need to locate the sge probe script and it must be executable
-if [ ! -x sge_meter.py ]; then
-  ${Logger} "The sge_meter.py file is not in this directory: $(pwd)"
+if [ ! -x sge_meter ]; then
+  ${Logger} "The sge_meter file is not in this directory: $(pwd)"
   exit -2
 fi
   
 # We need to locate these files and they must be readable
-for Needed_File in ProbeConfig
+for Needed_File in $probeconfig_loc
 do
   if [ ! -f ${Needed_File} ]; then
     ${Logger} \
@@ -83,29 +71,19 @@
   
 # This is what we expect in a normal Gratia install
 pp_dir=$(cd "$Meter_BinDir/../common"; pwd)
-if test -n "$PYTHONPATH" ; then
-  if echo "$PYTHONPATH" | grep -e ':$' >/dev/null 2>&1; then
-    PYTHONPATH="${PYTHONPATH}${pp_dir}:"
-  else
-    PYTHONPATH="${PYTHONPATH}:${pp_dir}"
-  fi
-else
-  PYTHONPATH="${pp_dir}"
-fi
-export PYTHONPATH
 
-enabled=`${pp_dir}/GetProbeConfigAttribute.py EnableProbe`
+enabled=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc EnableProbe`
 (( status = $? ))
 if (( $status != 0 )); then
   echo "ERROR checking probe configuration!" 1>&2
   exit $status
 fi
 if [[ -n "$enabled" ]] && [[ "$enabled" == "0" ]]; then
-  ${pp_dir}/DebugPrint.py -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
+  ${pp_dir}/DebugPrint -c $probeconfig_loc -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
   exit 1
 fi
 
-WorkingFolder=`${pp_dir}/GetProbeConfigAttribute.py WorkingFolder`
+WorkingFolder=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc WorkingFolder`
 if [ ! -d ${WorkingFolder} ]; then
   if [ "x${WorkingFolder}" != "x" ] ; then 
     mkdir -p ${WorkingFolder}
@@ -123,11 +101,11 @@
 fi 
 
 # Note: location of accounting file should be specified in ProbeConfig
-./sge_meter.py -c
+./sge_meter -c
 ExitCode=$?
 # If the probe ended in error, report this in Syslog and exit
 if [ $ExitCode != 0 ]; then
-  ${pp_dir}/DebugPrint.py -l -1 "ALERT: $0 exited abnormally with [$ExitCode]"
+  ${pp_dir}/DebugPrint  -c $probeconfig_loc -l -1 "ALERT: $0 exited abnormally with [$ExitCode]"
   exit $ExitCode
 fi
     
