--- _build_results/BUILD/gratia-probe-1.07.02e/condor/condor_meter.cron.sh	2011-05-19 08:28:52.000000000 -0500
+++ condor/condor_meter.cron.sh	2011-08-22 11:15:19.000000000 -0500
@@ -25,18 +25,7 @@
 
 #Meter_BinDir='/home/kschu/src/osg'
 Meter_BinDir=$(dirname $0)
-
-# Setup the proper Grid environment
-# I need to know a default location to find this setup.sh script ??? ###
-eval `grep VDTSetupFile ${Meter_BinDir}/ProbeConfig`
-for Setupsh in ${VDTSetupFile} '/root/setup.sh'
-do
-  if [[ -f ${Setupsh} && -r ${Setupsh} ]]; then
-    # Should the output of this be directed to /dev/null?
-    . ${Setupsh} >/dev/null
-    break
-  fi
-done
+probeconfig_loc=/etc/gratia/condor/ProbeConfig
 
 # Set the working directory, where we expect to find the following
 #    necessary files.
@@ -49,7 +38,7 @@
 
 # Need to be sure there is not one of these running already
 NCMeter=`ps -ef | grep condor_meter.pl | grep -v grep | wc -l`
-eval `grep WorkingFolder ./ProbeConfig`
+eval `grep WorkingFolder $probeconfig_loc`
 if [ ${NCMeter} -ne 0 -a -e ${WorkingFolder}/condor_meter.cron.pid ]; then
   # We might have a condor_meter.pl running, let's verify that we 
   # started it.
@@ -70,7 +59,7 @@
 fi
   
 # We need to locate these files and they must be readable
-for Needed_File in ProbeConfig
+for Needed_File in $probeconfig_loc
 do
   if [ ! -f ${Needed_File} ]; then
     ${Logger} \
@@ -91,25 +80,25 @@
 fi
 export PYTHONPATH
 
-enabled=`${pp_dir}/GetProbeConfigAttribute.py EnableProbe`
+enabled=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc EnableProbe`
 (( status = $? ))
 if (( $status != 0 )); then
   echo "ERROR checking probe configuration!" 1>&2
   exit $status
 fi
 if [[ -n "$enabled" ]] && [[ "$enabled" == "0" ]]; then
-  ${pp_dir}/DebugPrint.py -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
+  ${pp_dir}/DebugPrint -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
   exit 1
 fi
 
 # This is what we expect in a normal Gratia install
-DataFolder=`${pp_dir}/GetProbeConfigAttribute.py DataFolder`
+DataFolder=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc DataFolder`
 if [ ! -d ${DataFolder} ]; then
   ${Logger} "There is no ${DataFolder} directory (defined as DataFolder in ProbeConfig)."
   exit -4
 fi
 
-WorkingFolder=`${pp_dir}/GetProbeConfigAttribute.py WorkingFolder`
+WorkingFolder=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc WorkingFolder`
 if [ ! -d ${WorkingFolder} ]; then
   ${Logger} "There is no ${WorkingFolder} directory (defined as WorkingFolder in ProbeConfig)."
   exit -4
@@ -131,7 +120,8 @@
   -v \
   -x \
   -s "${WorkingFolder}/globus-condor-log-state.dat" \
-  ${DataFolder} | ${pp_dir}/DebugPrint.py -l 1
+  -f $probeconfig_loc \
+  ${DataFolder} | ${pp_dir}/DebugPrint -l 1 -c $probeconfig_loc
 ExitCode=$?
 # If the probe ended in error, report this in Syslog and exit
 if [ $ExitCode != 0 ]; then
