--- _build_results/BUILD/gratia-probe-1.07.02e/glexec/glexec_meter.cron.sh	2011-08-22 11:29:55.000000000 -0500
+++ glexec/glexec_meter.cron.sh	2011-08-22 11:34:31.000000000 -0500
@@ -12,16 +12,6 @@
 Meter_BinDir=$(dirname $0)
 probeconfig_loc=/etc/gratia/glexec/ProbeConfig
 
-eval `grep VDTSetupFile $probeconfig_loc`
-for Setupsh in ${VDTSetupFile} '/opt/vdt/setup.sh' '/opt/osg-ce/setup.sh'
-do
-  if [[ -f ${Setupsh} && -r ${Setupsh} ]]; then
-    # Should the output of this be directed to /dev/null?
-    . ${Setupsh} >/dev/null
-    break
-  fi
-done
-
 # Set the working directory, where we expect to find the following
 #    necessary files.
 if [ -d ${Meter_BinDir} ]; then
@@ -32,13 +22,13 @@
 fi
 
 # We need to locate the probe script and it must be executable
-if [ ! -x ./glexec_meter.py ]; then
-  ${Logger} "The glexec_meter.py file is not in this directory: $(pwd)"
+if [ ! -x ./glexec_meter ]; then
+  ${Logger} "The glexec_meter file is not in this directory: $(pwd)"
   exit -2
 fi
 
 # We need to locate these files and they must be readable
-for Needed_File in ProbeConfig
+for Needed_File in $probeconfig_loc
 do
   if [ ! -f ${Needed_File} ]; then
     ${Logger} \
@@ -48,38 +38,28 @@
 done
 
 pp_dir=$(cd "$Meter_BinDir/../common"; pwd)
-if test -n "$PYTHONPATH" ; then
-  if echo "$PYTHONPATH" | grep -e ':$' >/dev/null 2>&1; then
-    PYTHONPATH="${PYTHONPATH}${pp_dir}:"
-  else
-    PYTHONPATH="${PYTHONPATH}:${pp_dir}"
-  fi
-else
-  PYTHONPATH="${pp_dir}"
-fi
-export PYTHONPATH
 
 # glexec probe has its own lock file checking.
 
-enabled=`${pp_dir}/GetProbeConfigAttribute.py EnableProbe`
+enabled=`${pp_dir}/GetProbeConfigAttribute -c $probeconfig_loc EnableProbe`
 (( status = $? ))
 if (( $status != 0 )); then
   echo "ERROR checking probe configuration!" 1>&2
   exit $status
 fi
 if [[ -n "$enabled" ]] && [[ "$enabled" == "0" ]]; then
-  ${pp_dir}/DebugPrint.py -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
+  ${pp_dir}/DebugPrint -c $probeconfig_loc -l -1 "Probe is not enabled: check $Meter_BinDir/ProbeConfig."
   exit 1
 fi
 
 #--- run the probes ----
-./glexec_meter.py --nodaemon 2>&1 | ${pp_dir}/DebugPrint.py -l 1
+./glexec_meter --nodaemon 2>&1 | ${pp_dir}/DebugPrint -c $probeconfig_loc -l 1
 
 ExitCode=$?
 
 # If the probe ended in error, report this in Syslog and exit
 if [ $ExitCode != 0 ]; then
-  ${pp_dir}/DebugPrint.py -l -1 "ALERT: $0 exited abnormally with [$ExitCode]"
+  ${pp_dir}/DebugPrint -c $probeconfig_loc -l -1 "ALERT: $0 exited abnormally with [$ExitCode]"
   exit $ExitCode
 fi
   
--- _build_results/BUILD/gratia-probe-1.07.02e/glexec/glexec_meter.py	2011-05-19 08:28:53.000000000 -0500
+++ glexec/glexec_meter.py	2011-08-22 11:32:41.000000000 -0500
@@ -6,7 +6,7 @@
 import os,os.path,sys,time,string,pwd
 import socket
 import popen2
-import gratia_glexec_parser
+import gratia.glexec.gratia_glexec_parser as gratia_glexec_parser
 import Gratia
 
 #
