From 58848757556482d330ddf9d74b5f6e3b3261e875 Mon Sep 17 00:00:00 2001
From: Matyas Selmeci <matyas@cs.wisc.edu>
Date: Tue, 13 Feb 2018 20:53:47 -0600
Subject: [PATCH] voms-proxy-direct-2

Modify voms-proxy-fake-based files to create and build voms-proxy-direct and docs
---
 doc/Makefile.am           | 12 ++++++++----
 doc/voms-proxy-direct.xml | 27 ++++++++++++++++-----------
 src/utils/Makefile.am     | 15 +++++++++++++++
 src/utils/vomsdirect.cc   | 18 +++++++++---------
 4 files changed, 48 insertions(+), 24 deletions(-)

diff --git a/doc/Makefile.am b/doc/Makefile.am
index 9f29c3a..120f046 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -3,15 +3,17 @@ SGML_INCLUDES = authors.sgml bugzilla.sgml license.sgml links.sgml
 SGML = $(srcdir)/voms-proxy-init.xml \
        $(srcdir)/voms-proxy-list.xml \
        $(srcdir)/voms.xml \
        $(srcdir)/voms-proxy-info.xml \
        $(srcdir)/voms-proxy-destroy.xml \
-       $(srcdir)/voms-proxy-fake.xml
+       $(srcdir)/voms-proxy-fake.xml \
+       $(srcdir)/voms-proxy-direct.xml
 
 SGML_DIST = voms-proxy-init.xml voms.xml voms-proxy-info.xml \
             voms-proxy-destroy.xml \
-            voms-proxy-fake.xml voms-proxy-list.xml
+            voms-proxy-fake.xml voms-proxy-list.xml \
+            voms-proxy-direct.xml
 
 LATEX_DIST  = software.tex capi.tex c++api.tex AC-RFC.tex
 
 mandir = $(datadir)/man
 
@@ -21,11 +23,12 @@ man_MANS = \
 	voms.8 \
 	voms-proxy-init.1 \
 	voms-proxy-info.1 \
 	voms-proxy-destroy.1 \
 	voms-proxy-fake.1 \
-	voms-proxy-list.1
+	voms-proxy-list.1 \
+	voms-proxy-direct.1
 endif
 endif
 
 if BUILD_SERVER
 if !BUILD_CLIENTS
@@ -39,11 +42,12 @@ if BUILD_CLIENTS
 man_MANS = \
 	voms-proxy-init.1 \
 	voms-proxy-info.1 \
 	voms-proxy-destroy.1 \
 	voms-proxy-fake.1 \
-	voms-proxy-list.1
+	voms-proxy-list.1 \
+	voms-proxy-direct.1
 endif
 endif
 
 if !BUILD_SERVER
 if !BUILD_CLIENTS
diff --git a/doc/voms-proxy-direct.xml b/doc/voms-proxy-direct.xml
index d6e51a3..8b22910 100644
--- a/doc/voms-proxy-direct.xml
+++ b/doc/voms-proxy-direct.xml
@@ -5,33 +5,38 @@
 <!ENTITY bugzilla SYSTEM "bugzilla.sgml">
 <!ENTITY license  SYSTEM "license.sgml">
 <!ENTITY links    SYSTEM "links.sgml">
 ]>
 
-<refentry id='vomsproxyfake1'>
+<refentry id='vomsproxydirect1'>
 <refmeta>
-<refentrytitle>voms-proxy-fake</refentrytitle>
+<refentrytitle>voms-proxy-direct</refentrytitle>
 <manvolnum>1</manvolnum>
 <refmiscinfo class='source'>VOMS Client</refmiscinfo>
 </refmeta>
 
 <refnamediv id='name'>
-<refname>voms-proxy-fake</refname>
-<refpurpose>create a proxy with VOMS extensions</refpurpose>
+<refname>voms-proxy-direct</refname>
+<refpurpose>create and sign a proxy with VOMS extensions</refpurpose>
 </refnamediv>
 
 <refsynopsisdiv id='synopsis'>
 <cmdsynopsis>
-<command>voms-proxy-fake</command>
+<command>voms-proxy-direct</command>
 <arg choice='opt'><arg choice='plain'>options</arg></arg>
 </cmdsynopsis>
 </refsynopsisdiv>
 
 <refsect1 id='description'><title>Description</title>
 
-<para>The voms-proxy-fake generates a proxy containing arbitrary attributes
-without contacting the VOMS server.</para>
+<para>voms-proxy-direct generates a proxy containing arbitrary attributes,
+signed directly with a VO's cert and key instead of contacting a VOMS
+server.</para>
+
+<para>The intent for this is to allow VOs to sign proxies for their pilots
+without requiring them to also run a VOMS server and manage user
+membership.</para>
 
 </refsect1>
 
 <refsect1 id='options'><title>Options</title>
 
@@ -81,13 +86,13 @@ Non-standard location of user key</para>
 Location of trusted certificates dir</para>
 
 <para><option>-out</option> <replaceable>proxyfile</replaceable>
 Location of new proxy cert</para>
 
-<para><option>-voms</option> <replaceable>voms[:command]</replaceable>
-Specifies the fake VOMS server that will appear in the attribute certificate.  
-command is ignored and is present for compatibility with voms-proxy-init.</para>
+<para><option>-voms</option> <replaceable>voms</replaceable>
+Specifies the VO name that will appear in the certificate's attributes.
+</para>
 
 <para><option>-include</option> <replaceable>file</replaceable>
 Includes <emphasis remap='I'>file</emphasis> in the certificate (in a non
 critical extension)</para>
 
@@ -141,11 +146,11 @@ via the '\XX' encoding, where XX are two hexadecimal characters.</para>
 <para><option>-newserial</option> <replaceable>newserial</replaceable></para>
 <para>The created proxy will have
   the <emphasis remap='I'>newserial</emphasis> as its serial number.
   The new serial number will have to be specified as an hex
   representation.  Any length is possible.  If this option is not
-  specified, voms-proxy-fake will choose the serial number.</para>
+  specified, voms-proxy-direct will choose the serial number.</para>
 
 <para><option>-pastac</option> <replaceable>timespec</replaceable></para>
 <para>
 The created AC will have its validity start in the past, as specified
 by <emphasis remap='I'>timespec</emphasis>.</para>
diff --git a/src/utils/Makefile.am b/src/utils/Makefile.am
index 5c6ff51..d46b0bb 100644
--- a/src/utils/Makefile.am
+++ b/src/utils/Makefile.am
@@ -1,9 +1,10 @@
 if BUILD_CLIENTS
 bin_PROGRAMS = \
 	voms-proxy-info \
 	voms-proxy-destroy \
+	voms-proxy-direct \
 	voms-proxy-fake \
 	voms-verify
 
 
 voms_proxy_info_SOURCES = \
@@ -39,12 +40,20 @@ voms_proxy_fake_SOURCES = \
 	vomsfake.h \
 	vomsfake.cc \
 	vomsparser.c \
 	lex.yy.c 
 
+voms_proxy_direct_SOURCES = \
+	vomsfake.h \
+	vomsdirect.cc \
+	vomsparser.c \
+	lex.yy.c
+
 EXTRA_DIST = vomsfake.y vomsparser.l vomsparser.h fakeparsertypes.h
 
+vomsdirect.$(OBJEXT): vomsparser.h
+
 vomsfake.$(OBJEXT): vomsparser.h
 
 vomsparser.$(OBJEXT): vomsparser.h
 
 if REGENERATE_PARSERS
@@ -60,10 +69,16 @@ voms_proxy_fake_LDADD = \
 	$(top_builddir)/src/api/ccapi/libvomsapi.la  \
 	$(top_builddir)/src/replib/librep.la \
 	$(top_builddir)/src/sslutils/libssl_utils_nog.la \
 	$(OPENSSL_LIBS)
 
+voms_proxy_direct_LDADD = \
+	$(top_builddir)/src/api/ccapi/libvomsapi.la  \
+	$(top_builddir)/src/replib/librep.la \
+	$(top_builddir)/src/sslutils/libssl_utils_nog.la \
+	$(OPENSSL_LIBS)
+
 AM_CPPFLAGS = \
 	-I$(top_srcdir)/src/api/ccapi \
 	-I$(top_srcdir)/src/include \
 	-I$(top_srcdir)/src/sslutils \
 	$(NO_GLOBUS_FLAGS)
diff --git a/src/utils/vomsdirect.cc b/src/utils/vomsdirect.cc
index b98f56b..30873f4 100644
--- a/src/utils/vomsdirect.cc
+++ b/src/utils/vomsdirect.cc
@@ -93,11 +93,11 @@ static int parse_ga_value(char *ga, char **id, char **value, char **qual);
 
 extern int AC_Init();
 
 #include "init.h"
 
-const std::string SUBPACKAGE      = "voms-proxy-fake";
+const std::string SUBPACKAGE      = "voms-proxy-direct";
 
 /* FIXME: should take locations from /etc/sysconfig/voms */
 const std::string location = (getenv("VOMS_LOCATION") ? getenv("VOMS_LOCATION") : "");
 const std::string conf_file_name     = (location + "/etc/vomses");
 const std::string USERCONFILENAME = std::string(".voms") + std::string("/vomses");
@@ -222,27 +222,27 @@ Fake::Fake(int argc, char ** argv) :   confile(conf_file_name),
     "    -bits                          Number of bits in key {512|1024|2048|4096} (default:1024)\n" \
     "    -cert     <certfile>           Non-standard location of user certificate\n" \
     "    -key      <keyfile>            Non-standard location of user key\n" \
     "    -certdir  <certdir>            Non-standard location of trusted cert dir\n" \
     "    -out      <proxyfile>          Non-standard location of new proxy cert\n" \
-    "    -voms <voms>                   Specify voms server. :command is optional.\n" \
-    "    -uri <uri>                     Specifies the <hostname>:<port> of the fake server.\n" \
+    "    -voms <voms>                   Specify VO name to embed in the proxy.\n" \
+    "    -uri <uri>                     Specifies the <hostname>:<port> of the VOMS server to embed in the proxy.\n" \
     "    -target <hostname>             Targets the AC against a specific hostname.\n" \
     "    -vomslife <H>                  Try to get a VOMS pseudocert valid for H hours.\n" \
     "    -voinfo <file>                 Gets AC information from <file>\n" \
     "    -include <file>                Include the contents of the specified file.\n" \
     "    -conf <file>                   Read options from <file>.\n" \
     "    -policy <policyfile>           File containing policy to store in the ProxyCertInfo extension.\n" \
     "    -pl, -policy-language <oid>    OID string for the policy language.\n" \
-    "    -path-length <l>               Allow a chain of at most l proxies to be generated from this ones.\n" \
+    "    -path-length <l>               Allow a chain of at most l proxies to be generated from this one.\n" \
     "    -globus                        Globus version.\n" \
     "    -proxyver <n>                  Version of proxy certificate.\n" \
-    "    -rfc                           Create RFC-conforming proxies (synonim of --proxyver 4)\n"             
+    "    -rfc                           Create RFC-conforming proxies (synonym of --proxyver 4)\n"
     "    -noregen                       Doesn't regenerate a new proxy for the connection.\n" \
-    "    -separate <file>               Saves the informations returned by the server on file <file>.\n" \
-    "    -hostcert <file>               Fake host certificate.\n" \
-    "    -hostkey <file>                Fake host private key.\n" \
+    "    -separate <file>               Saves the information returned by the server into file <file>.\n" \
+    "    -hostcert <file>               Host certificate used for signing the attributes.\n" \
+    "    -hostkey <file>                Host private key used for signing the attributes.\n" \
     "    -fqan <string>                 String to include in the AC as the granted FQAN.\n" \
     "    -newformat                     Creates ACs according to the new format.\n" \
     "    -newsubject <string>           Subject of the new certificate.\n" \
     "    -newissuer <string>            Issuer of the new certificate.\n"\
     "    -pastac <seconds>\n"
@@ -261,11 +261,11 @@ Fake::Fake(int argc, char ** argv) :   confile(conf_file_name),
     "                                   codeSigning,emailProtection,timeStamping,msCodeInd,\n"\
     "                                   msCodeCom,msCTLSign,msSGC,msEFS,nsSGC,deltaCRL\n"\
     "                                   CRLReason,invalidityDate,SXNetID,OCSPSigning.\n"\
     "    -newserial <num>               Specifies the serial number of the generated proxy\n"\
     "                                   in hex notation.  Any length is possible.\n"\
-    "                                   Default: let voms-proxy-fake choose.\n"\
+    "                                   Default: let voms-proxy-direct choose.\n"\
     "    -extension <OID</crit><value>> Add Extension with the specified OID and with the specified value\n"\
     "    -acextension <OID</crit><value>> Add Extension to the AC with the specified OID and with the specified value\n"\
     "    -selfsigned                    Create a self-signed certificate.\n"\
     "    -ga <id>=<value> [(context)]   Set a GA with name 'id', value 'value' and optional context.\n"\
     "\n";
-- 
2.14.3

