Index: src/verify-proxy/verify-lib/src/verify_x509.c
===================================================================
--- src/verify-proxy/verify-lib/src/verify_x509.c	(revision 18751)
+++ src/verify-proxy/verify-lib/src/verify_x509.c	(working copy)
@@ -367,6 +367,8 @@
  */
 int verify_X509_term (internal_verify_x509_data_t **verify_x509_data)
 {
+    verify_term_library();
+
     internal_verify_x509_data_t *internal_verify_x509_data = NULL;
 
     if (!verify_x509_data || !(*verify_x509_data)) {
Index: src/verify-proxy/verify-lib/src_internal/_verify_x509.c
===================================================================
--- src/verify-proxy/verify-lib/src_internal/_verify_x509.c	(revision 18751)
+++ src/verify-proxy/verify-lib/src_internal/_verify_x509.c	(working copy)
@@ -92,6 +92,7 @@
  */
 static int initialized=0;
 static int library=-1;
+static ERR_STRING_DATA errstr[13],funcstr[5];
 
 static int chain_verify=0;
 
@@ -212,22 +213,36 @@
 }
 
 /**
+ * Unload all the registered strings.
+ */
+int verify_term_library(void) {
+    if (library != -1) {
+        ERR_unload_strings(library, errstr);
+        ERR_unload_strings(library, funcstr);
+    }
+    return 0;
+}
+
+/**
  * Initializes the library, by creating a new library ID and loading the error
  * and function strings.
  * Returns library number
  */
 int verify_init_library(void)   {
     const char *oper = "verify_init_library";
-    static ERR_STRING_DATA errstr[13],funcstr[5];
     ASN1_OBJECT *obj=NULL;
     int nid;
 
+
     /* Although in an ideal world we should use ERR_get_next_error_library(),
      * since VOMS is not using it, better set it by hand to a hopefully unused
      * value. */
 /*    library=ERR_get_next_error_library();*/
     library=ERR_LIB_USER+64;
 
+    unsigned long library_err_strings_installed = ERR_PACK(library,0,0);
+    verify_log(L_DEBUG, "Result from error string test: %s", ERR_reason_error_string(library_err_strings_installed));
+
     /* Function code ==0 and reason ==0 sets the library name */
     errstr[0].error=ERR_PACK(library,0,0);
     errstr[0].string="Proxy Verification library";
@@ -277,6 +292,7 @@
     /* Store the function strings */
     ERR_load_strings(library,funcstr);
 
+    verify_log(L_DEBUG, "Result from error string test: %s", ERR_reason_error_string(library_err_strings_installed));
     /* Add our own OID entries
      * NOTE: We inherit the proxy cert info extension
      * fields from either OpenSSL or VOMS_Init via InitProxyCertInfoExtension()
Index: src/verify-proxy/verify-lib/src_internal/_verify_x509.h
===================================================================
--- src/verify-proxy/verify-lib/src_internal/_verify_x509.h	(revision 18751)
+++ src/verify-proxy/verify-lib/src_internal/_verify_x509.h	(working copy)
@@ -105,6 +105,11 @@
 int verify_init_library(void);
 
 /**
+ * Unloads the internal library, removing the various string registrations from OpenSSL.
+ */
+int verify_term_library(void);
+
+/**
  * Reads the private key from filename and stores the result in pkey
  * Returns value of ERR_peek_error() on error or 0 on success.
  */
