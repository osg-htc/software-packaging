--- config/20-pbs.ini	(revision 14672)
+++ config/20-pbs.ini	(revision 14673)
@@ -40,6 +40,12 @@
 ; directory
 log_directory = UNAVAILABLE
 
+; This setting is required for Gratia to work. It needs to read the PBS
+; accounting log files in order to report accounting data. Common locations are:
+; /var/torque/server_priv/accounting
+; /var/lib/torque/server_priv/accounting
+accounting_log_directory = UNAVAILABLE
+
 ; This setting is optional and should point to your PBS server node if it is
 ; different from your OSG CE 
-pbs_server = UNAVAILABLE
\ No newline at end of file
+pbs_server = UNAVAILABLE
--- osg_configure/configure_modules/gratia.py	(revision 14672)
+++ osg_configure/configure_modules/gratia.py	(revision 14673)
@@ -109,7 +109,15 @@
                                           'PBS',
                                           log_option)
           self.__probe_config['pbs'] = {'log_directory' : log_option.value}
-          
+
+          accounting_log_option = configfile.Option(name = 'accounting_log_directory',
+                                         required = configfile.Option.OPTIONAL,
+                                         default_value = '')
+          accounting_log_dir = configfile.get_option(configuration,
+                                          'PBS',
+                                          accounting_log_option)
+          self.__probe_config['pbs'] = {'accounting_log_directory' : accounting_log_option.value}
+
     self.getOptions(configuration, 
                     ignore_options = ['itb-jobmanager-gratia',
                                       'itb-gridftp-gratia',
@@ -424,10 +432,10 @@
     """
     Do pbs probe specific configuration
     """
-    if (self.__probe_config['pbs']['log_directory'] is None or
-        self.__probe_config['pbs']['log_directory'] == ''):
+    if (self.__probe_config['pbs']['accounting_log_directory'] is None or
+        self.__probe_config['pbs']['accounting_log_directory'] == ''):
       return True
-    log_directory = self.__probe_config['pbs']['log_directory']
+    accounting_log_directory = self.__probe_config['pbs']['accounting_log_directory']
     re_obj = re.compile('^\s*pbsAcctLogDir\s*=.*$', re.MULTILINE)  
     config_location = os.path.join('/', 
                                'etc',
@@ -435,11 +443,11 @@
                                'pbs-lsf',
                                'urCollector.conf')   
     buffer = file(config_location).read()
-    (buffer, count) = re_obj.subn(r'pbsAcctLogDir = "%s"' % log_directory,
+    (buffer, count) = re_obj.subn(r'pbsAcctLogDir = "%s"' % accounting_log_directory,
                                   buffer, 
                                   1)
     if count == 0:
-      buffer += "pbsAcctLogDir = \"%s\"\n" % log_directory
+      buffer += "pbsAcctLogDir = \"%s\"\n" % accounting_log_directory
     if not utilities.atomic_write(config_location, buffer):
       return False    
     return True
--- osg_configure/configure_modules/pbs.py	(revision 14672)
+++ osg_configure/configure_modules/pbs.py	(revision 14673)
@@ -44,6 +44,10 @@
                       configfile.Option(name = 'log_directory',
                                         required = configfile.Option.OPTIONAL,
                                         default_value = ''),
+                    'accounting_log_directory' : 
+                      configfile.Option(name = 'accounting_log_directory',
+                                        required = configfile.Option.OPTIONAL,
+                                        default_value = ''),
                     'pbs_server' : 
                       configfile.Option(name = 'pbs_server',
                                         required = configfile.Option.OPTIONAL,
@@ -266,11 +270,11 @@
       (buffer, count) = re_obj.subn(new_setting, buffer, 1)
       if count == 0:
         buffer += new_setting + "\n"
-    
+
     if not utilities.atomic_write(PBSConfiguration.GRAM_CONFIG_FILE, buffer):
       return False
     
     return True
       
          
-      
\ No newline at end of file
+      
