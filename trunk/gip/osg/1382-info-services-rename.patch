Index: gip-1.3.10/gip/lib/python/gip_osg.py
===================================================================
--- gip-1.3.10.orig/gip/lib/python/gip_osg.py	2013-05-22 15:21:10.000000000 -0500
+++ gip-1.3.10/gip/lib/python/gip_osg.py	2014-02-04 16:55:47.091661959 -0600
@@ -645,13 +645,13 @@
             # Handle allowed VO's for bestman
             # Yet to be implemented
 
-cemon_re = re.compile("(https?)://([a-zA-Z0-9\-.]+):([0-9]+)(.*)\[(.*)\]")
+info_re = re.compile("(https?)://([a-zA-Z0-9\-.]+):([0-9]+)(.*)\[(.*)\]")
 def config_info(ocp, gcp):
     """
     Configure the information services.  Right now, this means that we look at
-    and configure the CEMon section from config.ini to determine the BDII and
-    ReSS endpoints.  We then save this to the [GIP] configuration section in
-    the bdii_endpoints and ress_endpoints attributes.
+    and configure the CEMon or Infoservices section from config.ini to
+    determine the BDII and ReSS endpoints.  We then save this to the [GIP]
+    configuration section in the bdii_endpoints and ress_endpoints attributes.
 
     If all else fails, we default to the OSG servers
     """
@@ -670,18 +670,24 @@
     ress_endpoints = []
     bdii_endpoints = []
 
+    # In OSG 3.1, the osg config section is [Cemon]; in 3.2 it's [Infoservices]
+    # since we are replacing CEMon with OSG-Info-Services.
+    info_section = "Cemon"
+    if ocp.has_section("Infoservices"):
+        info_section = "Infoservices"
+
     # Parse the production and testing endpoints
     def parse_endpoints(name_str):
         names = split_re.split(name_str)
         results = []
         for name in names:
-            m = cemon_re.match(name)
+            m = info_re.match(name)
             if m:
                 result = '%s://%s:%s%s' % m.groups()[:4]
                 results.append(result)
         return results
     def get_endpoints(cp, name, default):
-        name_str = cp_get(cp, "Cemon", name, None)
+        name_str = cp_get(cp, info_section, name, None)
         if not name_str:
             name_str = default
         return parse_endpoints(name_str)
@@ -698,7 +704,7 @@
 
     # See if the admins set something by hand; if not, go to the correct
     # endpoint depending on the grid.
-    ress_servers = cp_get(ocp, "Cemon", "ress_servers", "UNAVAILABLE")
+    ress_servers = cp_get(ocp, info_section, "ress_servers", "UNAVAILABLE")
     ress_servers = parse_endpoints(ress_servers)
     if not ress_servers:
         if is_osg:
@@ -706,7 +712,7 @@
         else:
             ress_servers = itb_ress_servers
 
-    bdii_servers = cp_get(ocp, "Cemon", "bdii_servers", "UNAVAILABLE")
+    bdii_servers = cp_get(ocp, info_section, "bdii_servers", "UNAVAILABLE")
     bdii_servers = parse_endpoints(bdii_servers)
     if not bdii_servers:
         if is_osg:
