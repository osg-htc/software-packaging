diff -ru gridftp-hdfs-0.5.3/src/gridftp_hdfs.c gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs.c
--- gridftp-hdfs-0.5.3/src/gridftp_hdfs.c	2011-12-09 11:06:52.000000000 -0600
+++ gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs.c	2012-05-30 16:41:46.000000000 -0500
@@ -217,18 +217,33 @@
 {
     globus_result_t                    result;
     globus_l_gfs_hdfs_handle_t *       hdfs_handle;
+    char *                             PathName;
     GlobusGFSName(hdfs_command);
 
     char * return_value = GLOBUS_NULL;
 
     hdfs_handle = (globus_l_gfs_hdfs_handle_t *) user_arg;
+    
+    // Get hadoop path name (ie subtract mount point)
+    PathName=cmd_info->pathname;
+    while (PathName[0] == '/' && PathName[1] == '/')
+    {
+        PathName++;
+    }
+    if (strncmp(PathName, hdfs_handle->mount_point, hdfs_handle->mount_point_len)==0) {
+        PathName += hdfs_handle->mount_point_len;
+    }
+    while (PathName[0] == '/' && PathName[1] == '/')
+    {
+        PathName++;
+    }
 
     GlobusGFSErrorSystemError("command", ENOSYS);
     switch (cmd_info->command) {
     case GLOBUS_GFS_CMD_MKD:
 {
         errno = 0;
-        if (hdfsCreateDirectory(hdfs_handle->fs, cmd_info->pathname) == -1) {
+        if (hdfsCreateDirectory(hdfs_handle->fs, PathName) == -1) {
             if (errno) {
                 result = GlobusGFSErrorSystemError("mkdir", errno);
             } else {
@@ -242,6 +257,18 @@
     case GLOBUS_GFS_CMD_RMD:
         break;
     case GLOBUS_GFS_CMD_DELE:
+{
+        errno = 0;
+        if (hdfsDelete(hdfs_handle->fs, PathName) == -1) {
+            if (errno) {
+                result = GlobusGFSErrorSystemError("unlink", errno);
+            } else {
+                GenericError(hdfs_handle, "Unable to delete file (reason unknown)", result);
+            }
+        } else {
+            result = GLOBUS_SUCCESS;
+        }
+}
         break;
     case GLOBUS_GFS_CMD_RNTO:
         break;
diff -ru gridftp-hdfs-0.5.3/src/gridftp_hdfs.h gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs.h
--- gridftp-hdfs-0.5.3/src/gridftp_hdfs.h	2011-12-09 09:13:50.000000000 -0600
+++ gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs.h	2012-05-30 11:24:59.000000000 -0500
@@ -23,6 +23,7 @@
 
 #include <stdio.h>
 #include <unistd.h>
+#include <sys/types.h>
 #include <sys/mman.h>
 
 // Note that we hide all symbols from the global scope except the module itself.
diff -ru gridftp-hdfs-0.5.3/src/gridftp_hdfs_stat.c gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs_stat.c
--- gridftp-hdfs-0.5.3/src/gridftp_hdfs_stat.c	2011-12-06 12:46:10.000000000 -0600
+++ gridftp-hdfs-0.5.3-stat/src/gridftp_hdfs_stat.c	2012-05-30 13:11:50.000000000 -0500
@@ -247,12 +247,26 @@
     const char *                        filename,
     const char *                        symlink_target)
 {
+    struct passwd *result;
+    struct group *gresult;
     GlobusGFSName(globus_l_gfs_file_copy_stat);
 
     stat_object->mode     = (fileInfo->mKind == kObjectKindDirectory) ? (S_IFDIR | fileInfo->mPermissions) :  (S_IFREG | fileInfo->mPermissions);
     stat_object->nlink    = (fileInfo->mKind == kObjectKindDirectory) ? 3 : 1;
     stat_object->uid      = default_id;
     stat_object->gid      = default_id;
+    
+    result=getpwnam(fileInfo->mOwner);
+    if (result != NULL)
+    {
+        stat_object->uid=result->pw_uid;
+    }
+    gresult=getgrnam(fileInfo->mOwner);
+    if (gresult != NULL)
+    {
+        stat_object->gid=gresult->gr_gid;
+    }
+
     stat_object->size     = (fileInfo->mKind == kObjectKindDirectory) ? 4096 : fileInfo->mSize;
     stat_object->mtime    = fileInfo->mLastMod;
     stat_object->atime    = fileInfo->mLastMod;
