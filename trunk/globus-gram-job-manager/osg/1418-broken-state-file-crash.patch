From d8bf2d72d4e14c7765964a4c155a89ce031fbacf Mon Sep 17 00:00:00 2001
From: Joseph Bester <bester@mcs.anl.gov>
Date: Tue, 11 Mar 2014 15:32:58 -0400
Subject: [PATCH] GT-520: Job Manager Segfault

---
 gram/jobmanager/source/globus_gram_job_manager.c   |  1 +
 gram/jobmanager/source/globus_gram_job_manager.h   |  1 +
 .../source/globus_gram_job_manager_request.c       | 28 ++++++++++
 .../source/globus_gram_job_manager_script.c        | 23 ++++++--
 gram/jobmanager/source/startup_socket.c            | 61 +++++++++-------------
 5 files changed, 72 insertions(+), 42 deletions(-)

Index: globus_gram_job_manager.c
===================================================================
--- globus_gram_job_manager.c.orig	2012-10-19 09:54:19.000000000 -0500
+++ globus_gram_job_manager.c	2014-03-13 11:17:37.358479352 -0500
@@ -3057,6 +3057,7 @@
             GSS_C_NO_CREDENTIAL,
             GSS_C_NO_CONTEXT,
             NULL,
+            NULL,
             GLOBUS_TRUE,
             NULL,
             NULL,
Index: globus_gram_job_manager.h
===================================================================
--- globus_gram_job_manager.h.orig	2012-06-18 11:44:17.000000000 -0500
+++ globus_gram_job_manager.h	2014-03-13 11:17:37.359479364 -0500
@@ -911,6 +911,7 @@
     char *                              rsl,
     gss_cred_id_t                       delegated_credential,
     gss_ctx_id_t                        response_ctx,
+    const char *                        peer_address,
     globus_gsi_cred_handle_t            peer_cred,
     globus_bool_t                       reinit,
     char **                             old_job_contact,
Index: globus_gram_job_manager_request.c
===================================================================
--- globus_gram_job_manager_request.c.orig	2012-10-19 09:54:19.000000000 -0500
+++ globus_gram_job_manager_request.c	2014-03-13 11:17:37.361479388 -0500
@@ -192,6 +192,7 @@
     char *                              rsl,
     gss_cred_id_t                       delegated_credential,
     gss_ctx_id_t                        response_ctx,
+    const char *                        peer_address,
     globus_gsi_cred_handle_t            peer_cred,
     globus_bool_t                       reinit,
     char **                             old_job_contact,
@@ -734,6 +735,31 @@
         goto seg_event_queue_init_failed;
     }
 
+    if (r->job_stats.client_address == NULL && peer_address != NULL)
+    {
+        r->job_stats.client_address = strdup(peer_address);
+        if (r->job_stats.client_address == NULL)
+        {
+            rc = GLOBUS_GRAM_PROTOCOL_ERROR_MALLOC_FAILED;
+
+            goto client_addr_strdup_failed;
+        }
+    }
+    if (r->job_stats.user_dn == NULL && peer_cred != NULL)
+    {
+        globus_result_t id_result;
+        char * id = NULL;
+
+        id_result = globus_gsi_cred_get_identity_name(
+                peer_cred,
+                &id);
+
+        if (id_result == GLOBUS_SUCCESS && id != NULL)
+        {
+            r->job_stats.user_dn = strdup(id);
+            OPENSSL_free(id);
+        }
+    }
     if (r->jm_restart == NULL)
     {
         rc = globus_gram_job_manager_state_file_write(r);
@@ -741,6 +767,7 @@
     
     if (rc != GLOBUS_SUCCESS)
     {
+client_addr_strdup_failed:
         globus_fifo_destroy(&r->seg_event_queue);
 seg_event_queue_init_failed:
         if (r->job_history_file)
@@ -999,6 +1026,7 @@
                 rsl,
                 cred,
                 *context,
+                peer_address,
                 peer_cred,
                 GLOBUS_FALSE,
                 old_job_contact,
Index: globus_gram_job_manager_script.c
===================================================================
--- globus_gram_job_manager_script.c.orig	2013-04-10 10:27:45.000000000 -0500
+++ globus_gram_job_manager_script.c	2014-03-13 11:17:37.362479400 -0500
@@ -22,6 +22,8 @@
 #include <sys/types.h>
 #include <utime.h>
 
+static const char * GLOBUS_GRAM_SCRIPT_NO_CLIENT = "noclient";
+
 globus_xio_driver_t                     globus_i_gram_job_manager_popen_driver;
 globus_xio_stack_t                      globus_i_gram_job_manager_popen_stack;
 static uint64_t                         globus_l_gram_next_script_sequence = 0;
@@ -636,7 +638,9 @@
             globus_list_search_pred(
                     request->manager->scripts_per_client,
                     globus_l_match_script_client_addr,
-                    request->job_stats.client_address));
+                    request->job_stats.client_address 
+                        ? request->job_stats.client_address
+                        : (void *) GLOBUS_GRAM_SCRIPT_NO_CLIENT));
 
     globus_l_gram_job_manager_script_done(request->manager, scripts, script_handle);
     GlobusGramJobManagerUnlock(request->manager);
@@ -2361,7 +2365,9 @@
     tmp = globus_list_search_pred(
                 manager->scripts_per_client,
                 globus_l_match_script_client_addr,
-                context->request->job_stats.client_address);
+                context->request->job_stats.client_address
+                ? context->request->job_stats.client_address
+                : (void *) GLOBUS_GRAM_SCRIPT_NO_CLIENT);
 
     if (tmp == NULL)
     {
@@ -2372,7 +2378,10 @@
 
             goto scripts_malloc_failed;
         }
-        scripts->client_addr = strdup(context->request->job_stats.client_address);
+        scripts->client_addr = strdup(
+            context->request->job_stats.client_address
+            ? context->request->job_stats.client_address
+            : GLOBUS_GRAM_SCRIPT_NO_CLIENT);
         if (scripts->client_addr == NULL)
         {
             rc = GLOBUS_GRAM_PROTOCOL_ERROR_MALLOC_FAILED;
@@ -2593,7 +2602,9 @@
                 globus_list_search_pred(
                         request->manager->scripts_per_client,
                         globus_l_match_script_client_addr,
-                        request->job_stats.client_address));
+                        request->job_stats.client_address
+                        ? request->job_stats.client_address
+                        : (void *) GLOBUS_GRAM_SCRIPT_NO_CLIENT));
         
         globus_xio_register_close(
                 handle,
@@ -2644,7 +2655,9 @@
             globus_list_search_pred(
                 manager->scripts_per_client,
                 globus_l_match_script_client_addr,
-                request->job_stats.client_address));
+                request->job_stats.client_address
+                ? request->job_stats.client_address
+                : (void *) GLOBUS_GRAM_SCRIPT_NO_CLIENT));
 
     for (i = 0, total_iov_contents = 0; i < script_context->iovcnt; i++)
     {
Index: startup_socket.c
===================================================================
--- startup_socket.c.orig	2013-05-16 10:03:18.000000000 -0500
+++ startup_socket.c	2014-03-13 11:17:37.364479424 -0500
@@ -1676,6 +1676,28 @@
             goto failed_import_cred;
         }
 
+        /* Determine client address if we don't know it from the
+         * gatekeeper
+         */
+        if (peername == NULL)
+        {
+            globus_sockaddr_t           peer_address;
+            socklen_t                   peer_address_len;
+
+            peer_address_len = sizeof(peer_address);
+            rc = getpeername(
+                    response_fd,
+                    (struct sockaddr *) &peer_address,
+                    &peer_address_len);
+            if (rc == GLOBUS_SUCCESS)
+            {
+                rc = globus_libc_addr_to_contact_string(
+                        &peer_address,
+                        GLOBUS_LIBC_ADDR_NUMERIC,
+                        &peername);
+            }
+        }
+
         /* Load request data */
         rc = globus_gram_job_manager_request_load(
                 manager,
@@ -1907,32 +1929,6 @@
 
         if (!version_only)
         {
-            globus_sockaddr_t           peer_address;
-            socklen_t                   peer_address_len;
-            char *                      peer_str = NULL;
-
-            if (peername != NULL)
-            {
-                peer_str = peername;
-                peername = NULL;
-            }
-            else
-            {
-                peer_address_len = sizeof(peer_address);
-
-                rc = getpeername(
-                        response_fd,
-                        (struct sockaddr *) &peer_address,
-                        &peer_address_len);
-                if (rc == GLOBUS_SUCCESS)
-                {
-                    rc = globus_libc_addr_to_contact_string(
-                            &peer_address,
-                            GLOBUS_LIBC_ADDR_NUMERIC,
-                            &peer_str);
-                }
-            }
-
             globus_gram_job_manager_request_log(
                     request,
                     GLOBUS_GRAM_JOB_MANAGER_LOG_DEBUG,
@@ -1942,17 +1938,8 @@
                     "peer=%s "
                     "\n",
                     request->job_contact_path,
-                    peer_str ? peer_str : "\"\"");
-
-            if (request->job_stats.client_address == NULL)
-            {
-                request->job_stats.client_address = peer_str;
-            }
-            else if (peer_str)
-            {
-                free(peer_str);
-            }
-
+                    peername ? peername : "\"\"");
+            
             /* Start state machine and send response */
             rc = globus_gram_job_manager_request_start(
                     manager,
