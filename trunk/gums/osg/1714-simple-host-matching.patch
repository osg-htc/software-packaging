diff --git a/gums-core/src/main/java/gov/bnl/gums/configuration/Configuration.java b/gums-core/src/main/java/gov/bnl/gums/configuration/Configuration.java
index cba8b58..f8f95e7 100644
--- a/gums-core/src/main/java/gov/bnl/gums/configuration/Configuration.java
+++ b/gums-core/src/main/java/gov/bnl/gums/configuration/Configuration.java
@@ -38,6 +38,8 @@ import gov.bnl.gums.persistence.PersistenceFactory;
  * @author Gabriele Carcassi, Jay Packard
  */
 public class Configuration {
+    public enum TriState {False, True, Default};
+
     private Logger log = Logger.getLogger(Configuration.class);
     private Logger adminLog = Logger.getLogger(GUMS.gumsAdminLogName);
     private List hostToGroupMappings = new ArrayList();
@@ -49,6 +51,7 @@ public class Configuration {
     private List bannedUserGroupList = new ArrayList();
     private String bannedUserGroups = "";
     private boolean allowGridmapFiles = true;
+    private TriState simpleHostMatching = TriState.Default;
     private boolean transformingFromOld11Version = false;
 	private Date created = new Date();
 
@@ -199,6 +202,7 @@ public class Configuration {
     	
     	newConf.setAllowGridmapFiles(getAllowGridmapFiles());
     	newConf.setBannedUserGroups(new String(getBannedUserGroups()));
+    	newConf.setSimpleHostMatching(getSimpleHostMatching());
     	
     	Iterator it = persistenceFactories.values().iterator();
     	while (it.hasNext() )
@@ -254,6 +258,14 @@ public class Configuration {
     	return bannedUserGroups;
     }
 
+    public TriState getSimpleHostMatching() {
+    	return simpleHostMatching;
+    }
+
+    public boolean getSimpleHostMatchingEnabled() {
+    	return simpleHostMatching == TriState.False ? false : true;
+    }
+
 	public Date getCreated() {
 		return created;
 	}
@@ -458,6 +470,14 @@ public class Configuration {
 			this.bannedUserGroupList = Collections.synchronizedList(new ArrayList());
 	}
 
+	public synchronized void setSimpleHostMatching(boolean simpleHostMatching) {
+		this.simpleHostMatching = simpleHostMatching ? TriState.True : TriState.False;
+	}
+
+	public synchronized void setSimpleHostMatching(TriState simpleHostMatching) {
+		this.simpleHostMatching = simpleHostMatching;
+	}
+
     public synchronized ManualUserGroup getDefaultBannedGroup() {
         int index = 1;
         String name = UserGroup.getDefaultBannedGroupName();
@@ -489,6 +509,9 @@ public class Configuration {
 		out.write("<gums version='"+version+"' "
 				+"allowGridmapFiles='"+(getAllowGridmapFiles()?"true":"false")+"' "
 				+"bannedUserGroups='"+getBannedUserGroups()+"'"
+				+(getSimpleHostMatching() == TriState.Default ? "" : " simpleHostMatching='"
+					+(getSimpleHostMatching() == TriState.True ? "true" : "false") + "'")
+				+"simpleHostMatching='"+getSimpleHostMatching()+"'"
 				+">\n\n");
 
 		// Write persistence factories
diff --git a/gums-service/src/main/java/gov/bnl/gums/service/GUMSXACMLMappingServiceImpl.java b/gums-service/src/main/java/gov/bnl/gums/service/GUMSXACMLMappingServiceImpl.java
index aef1057..3953953 100644
--- a/gums-service/src/main/java/gov/bnl/gums/service/GUMSXACMLMappingServiceImpl.java
+++ b/gums-service/src/main/java/gov/bnl/gums/service/GUMSXACMLMappingServiceImpl.java
@@ -73,6 +73,10 @@ public class GUMSXACMLMappingServiceImpl implements XACMLMappingService {
 				log.debug("missing attributes: "+XACMLConstants.RESOURCE_X509_ID + " or " + XACMLConstants.RESOURCE_DNS_HOST_NAME_ID);
 				throw new Exception("missing attribute: "+XACMLConstants.RESOURCE_X509_ID + " or " + XACMLConstants.RESOURCE_DNS_HOST_NAME_ID);
 			}
+			// upgrade to fake dn; /cn=hostname
+			if (gums.getConfiguration().getSimpleHostMatchingEnabled()) {
+				hostDn = "/CN=" + hostDn;
+			}
 		}
 		if (userDn==null || userDn.length()==0) {
 			log.debug("missing attribute: "+XACMLConstants.SUBJECT_X509_ID);
