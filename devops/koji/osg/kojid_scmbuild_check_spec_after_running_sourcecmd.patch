From 138f7df6b17e3eae74b6770b2e9bc63e92ab270b Mon Sep 17 00:00:00 2001
From: Matyas Selmeci <matyas@cs.wisc.edu>
Date: Fri, 15 Nov 2019 21:52:03 -0600
Subject: [PATCH] kojid_scmbuild_check_spec_after_running_sourcecmd

Check that the spec file is present and valid _after_ using the source_cmd to fetch it (for VCS builds).
---
 builder/kojid | 26 ++++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/builder/kojid b/builder/kojid
index a2f509e..09af82b 100755
--- a/builder/kojid
+++ b/builder/kojid
@@ -483,6 +483,17 @@ class BuildRoot(object):
         msg = '; see %s for more information' % logfile
         return parseStatus(rv, 'mock') + msg
 
+    def scm_call_source_cmd(self, sourcedir, source_cmd):
+        """call the command defined by source_cmd in the chroot so any required files not stored in the SCM can be retrieved
+        """
+        chroot_sourcedir = sourcedir[len(self.rootdir()):]
+        args = ['--no-clean', '--unpriv', '--cwd', chroot_sourcedir, '--chroot']
+        args.extend(source_cmd)
+        rv = self.mock(args)
+        if rv:
+            self.expire()
+            raise koji.BuildError("error retrieving sources, %s" % self._mockResult(rv))
+
     def build_srpm(self, specfile, sourcedir, source_cmd):
         self.session.host.setBuildRootState(self.id,'BUILDING')
         alt_sources_dir = "%s/SOURCES" % sourcedir
@@ -491,15 +502,7 @@ class BuildRoot(object):
         else:
             sources_dir = sourcedir
         if source_cmd:
-            # call the command defined by source_cmd in the chroot so any required files not stored in
-            # the SCM can be retrieved
-            chroot_sourcedir = sourcedir[len(self.rootdir()):]
-            args = ['--no-clean', '--unpriv', '--cwd', chroot_sourcedir, '--chroot']
-            args.extend(source_cmd)
-            rv = self.mock(args)
-            if rv:
-                self.expire()
-                raise koji.BuildError("error retrieving sources, %s" % self._mockResult(rv))
+            self.scm_call_source_cmd(sourcedir, source_cmd)
 
         args = ['--no-clean', '--buildsrpm', '--spec', specfile, '--sources', sources_dir,
                 '--target', 'noarch']
@@ -4415,6 +4418,9 @@ class BuildSRPMFromSCMTask(BaseBuildTask):
         # Hook for patching spec file in place
         self.patch_scm_source(sourcedir, logfile, opts)
 
+        # Run the source_cmd
+        if scm.source_cmd:
+            broot.scm_call_source_cmd(sourcedir, scm.source_cmd)
         # Find and verify that there is only one spec file.
         spec_files = glob.glob("%s/*.spec" % sourcedir)
         if not spec_files and self.options.support_rpm_source_layout:
@@ -4431,7 +4437,7 @@ class BuildSRPMFromSCMTask(BaseBuildTask):
 
         #build srpm
         self.logger.debug("Running srpm build")
-        broot.build_srpm(spec_file, sourcedir, scm.source_cmd)
+        broot.build_srpm(spec_file, sourcedir, None)
 
         srpms = glob.glob('%s/*.src.rpm' % broot.resultdir())
         if len(srpms) == 0:
-- 
2.6.3

